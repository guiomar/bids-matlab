{
  "PhaseSuffixDeprecated": {
    "issue": {
      "code": "PHASE_SUFFIX_DEPRECATED",
      "message": "DEPRECATED. Phase information associated with magnitude information stored in BOLD contrast.\nThis suffix should be replaced by the 'part-phase' entity in conjunction with the 'bold' suffix.\nFor backwards compatibility, 'phase' is considered equivalent to 'part-phase_bold'.\nWhen the 'phase' suffix is not used, each file shares the same name with the exception of the\n'part-<mag|phase>' or 'part-<real|imag>' key/value.\n",
      "level": "warning"
    },
    "selectors": [
      "datatype == \"func\""
    ],
    "checks": [
      "suffix != \"phase\""
    ]
  },
  "RepetitionTimeGreaterThan": {
    "issue": {
      "code": "REPETITION_TIME_GREATER_THAN",
      "message": "'RepetitionTime' is greater than 100. Are you sure it's expressed in seconds?\n",
      "level": "warning"
    },
    "selectors": [
      "suffix == \"bold\"",
      "type(sidecar.RepetitionTime) != \"null\""
    ],
    "checks": [
      "sidecar.RepetitionTime <= 100"
    ]
  },
  "RepetitionTimeMismatch": {
    "issue": {
      "code": "REPETITION_TIME_MISMATCH",
      "message": "Repetition time did not match between the scan's header and the associated JSON metadata file.\n",
      "level": "error"
    },
    "selectors": [
      "suffix == \"bold\"",
      "type(sidecar.RepetitionTime) != \"null\"",
      "type(nifti_header) != \"null\""
    ],
    "checks": [
      "sidecar.RepetitionTime == nifti_header.pixdim[4]"
    ]
  },
  "BoldNot4d": {
    "issue": {
      "code": "BOLD_NOT_4D",
      "message": "BOLD scans must be 4 dimensional.\n",
      "level": "error"
    },
    "selectors": [
      "suffix == \"bold\"",
      "type(nifti_header) != \"null\""
    ],
    "checks": [
      "nifti_header.dim[0] == 4"
    ]
  },
  "SliceTimingGreaterThanRepetitionTime": {
    "issue": {
      "code": "SLICETIMING_VALUES_GREATER_THAN_REPETITION_TIME",
      "message": "'SliceTiming' contains invalid value(s) greater than 'RepetitionTime'.\n'SliceTiming' values should be in seconds, not milliseconds (common mistake).\n",
      "level": "error"
    },
    "selectors": [
      "suffix == \"bold\"",
      "type(sidecar.SliceTiming) != \"null\"",
      "type(sidecar.RepetitionTime) != \"null\""
    ],
    "checks": [
      "max(sidecar.SliceTiming) <= sidecar.RepetitionTime"
    ]
  },
  "VolumeTimingRepetitionTimeMutex": {
    "issue": {
      "code": "VOLUME_TIMING_AND_REPETITION_TIME_MUTUALLY_EXCLUSIVE",
      "message": "The fields 'VolumeTiming' and 'RepetitionTime' for this file are mutually exclusive.\nChoose 'RepetitionTime' when the same repetition time is used for all volumes,\nor 'VolumeTiming' when variable times are used.\n",
      "level": "error"
    },
    "selectors": [
      "type(sidecar.VolumeTiming) != \"null\""
    ],
    "checks": [
      "type(sidecar.RepetitionTime) == \"null\""
    ]
  },
  "RepetitionTimeAcquisitionDurationMutex": {
    "issue": {
      "code": "REPETITION_TIME_AND_ACQUISITION_DURATION_MUTUALLY_EXCLUSIVE",
      "message": "The fields 'RepetitionTime' and 'AcquisitionDuration' for this file are mutually exclusive.\nTo specify acquisition duration, use 'SliceTiming' or 'DelayTime'\n(RepetitionTime - AcquisitionDuration).\n",
      "level": "error"
    },
    "selectors": [
      "type(sidecar.AcquistionDuration) != \"null\""
    ],
    "checks": [
      "type(sidecar.RepetitionTime) == \"null\""
    ]
  },
  "VolumeTimingDelayTimeMutex": {
    "issue": {
      "code": "VOLUME_TIMING_AND_DELAY_TIME_MUTUALLY_EXCLUSIVE",
      "message": "The fields 'VolumeTiming' and 'DelayTime' for this file are mutually exclusive.\nTo specify acquisition duration, use 'AcquisitionDuration' or 'SliceTiming'.\n",
      "level": "error"
    },
    "selectors": [
      "type(sidecar.VolumeTiming) != \"null\""
    ],
    "checks": [
      "type(sidecar.DelayTime) == \"null\""
    ]
  },
  "SliceTimingAcquisitionDurationMutex": {
    "issue": {
      "code": "SLICE_TIMING_AND_DURATION_MUTUALLY_EXCLUSIVE",
      "message": "'SliceTiming' is defined for this file.\nNeither 'DelayTime' nor 'AcquisitionDuration' may be defined in addition.\n",
      "level": "error"
    },
    "selectors": [
      "type(sidecar.SliceTiming) != \"null\""
    ],
    "checks": [
      "type(sidecar.AcquisitionDuration) == \"null\"",
      "type(sidecar.DelayTime) == \"null\""
    ]
  }
}