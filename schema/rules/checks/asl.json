{
  "ASLLabelingDurationNiftiLength": {
    "issue": {
      "code": "LABELING_DURATION_LENGTH_NOT_MATCHING_NIFTI",
      "message": "The number of values for 'LabelingDuration' for this file does not match the 4th dimension\nof the NIfTI header.\n'LabelingDuration' is the total duration of the labeling pulse train, in seconds,\ncorresponding to the temporal width of the labeling bolus for `(P)CASL`.\nIn case all control-label volumes (or deltam or CBF) have the same `LabelingDuration`, a scalar must be\nspecified.\nIn case the control-label volumes (or deltam or cbf) have a different `LabelingDuration`,\nan array of numbers must be specified, for which any `m0scan` in the timeseries has a `LabelingDuration` of\nzero.\nIn case an array of numbers is provided, its length should be equal to the number of volumes specified in\nthe associated `aslcontext.tsv`. Corresponds to DICOM Tag 0018,9258 `ASL Pulse Train Duration`.\n",
      "level": "error"
    },
    "selectors": [
      "suffix == \"asl\"",
      "\"LabelingDuration\" in sidecar",
      "type(sidecar.LabelingDuration) == 'array'",
      "type(nifti_header) != \"null\""
    ],
    "checks": [
      "length(sidecar.LabelingDuration) == nifti_header.dim[4]"
    ]
  },
  "ASLContextConsistent": {
    "issue": {
      "code": "ASLCONTEXT_TSV_NOT_CONSISTENT",
      "message": "The number of volumes in the 'aslcontext.tsv' for this file does not match the number of\nvalues in the NIfTI header.\n",
      "level": "error"
    },
    "selectors": [
      "suffix == \"asl\"",
      "type(associations.aslcontext) != \"null\"",
      "type(nifti_header) != \"null\""
    ],
    "checks": [
      "nifti_header.dim[4] == associations.aslcontext.n_rows"
    ]
  },
  "ASLFlipAngleNiftiLength": {
    "issue": {
      "code": "FLIP_ANGLE_NOT_MATCHING_NIFTI",
      "message": "The number of values for 'FlipAngle' for this file does not match the 4th dimension of the NIfTI header.\n'FlipAngle' is the flip angle (FA) for the acquisition, specified in degrees.\nCorresponds to: DICOM Tag 0018, 1314 `Flip Angle`.\nThe data type number may apply to files from any MRI modality concerned with a single value for this field,\nor to the files in a file collection where the value of this field is iterated using the flip entity.\nThe data type array provides a value for each volume in a 4D dataset and should only be used when the\nvolume timing is critical for interpretation of the data, such as in ASL or variable flip\nangle fMRI sequences.\n",
      "level": "error"
    },
    "selectors": [
      "suffix == \"asl\"",
      "\"FlipAngle\" in sidecar",
      "type(sidecar.FlipAngle) == 'array'",
      "type(nifti_header) != \"null\""
    ],
    "checks": [
      "length(sidecar.FlipAngle) == nifti_header.dim[4]"
    ]
  },
  "ASLFlipAngleASLContextLength": {
    "issue": {
      "code": "FLIP_ANGLE_NOT_MATCHING_ASLCONTEXT_TSV",
      "message": "The number of values for 'FlipAngle' for this file does not match the number of volumes in the\nassociated 'aslcontext.tsv'.\n'FlipAngle' is the flip angle (FA) for the acquisition, specified in degrees.\nCorresponds to: DICOM Tag 0018, 1314 `Flip Angle`.\nThe data type number may apply to files from any MRI modality concerned with a single value for this field,\nor to the files in a file collection where the value of this field is iterated using the flip entity.\nThe data type array provides a value for each volume in a 4D dataset and should only be used when the volume\ntiming is critical for interpretation of the data, such as in ASL or variable flip angle fMRI sequences.\n",
      "level": "error"
    },
    "selectors": [
      "suffix == \"asl\"",
      "type(associations.aslcontext) != \"null\"",
      "type(sidecar.FlipAngle) == 'array'"
    ],
    "checks": [
      "length(sidecar.FlipAngle) == associations.aslcontext.n_rows"
    ]
  },
  "ASLPostLabelingDelayNiftiLength": {
    "issue": {
      "code": "POST_LABELING_DELAY_NOT_MATCHING_NIFTI",
      "message": "The number of values for 'PostLabelingDelay' for this file does not match the 4th dimension of the NIfTI\nheader.\n'PostLabelingDelay' is the time, in seconds, after the end of the labeling (for (P)CASL) or middle of the\nlabeling pulse (for PASL) until the middle of the excitation pulse applied to the imaging slab\n(for 3D acquisition) or first slice (for 2D acquisition).\nCan be a number (for a single-PLD time series) or an array of numbers (for multi-PLD and Look-Locker).\nIn the latter case, the array of numbers contains the PLD of each volume\n(that is, each 'control' and 'label')\nin the acquisition order. Any image within the time-series without a PLD (for example, an 'm0scan') is\nindicated by a zero.\nBased on DICOM Tags 0018,9079 Inversion Times and 0018,0082 InversionTime.\n",
      "level": "error"
    },
    "selectors": [
      "suffix == \"asl\"",
      "type(associations.aslcontext) != \"null\"",
      "type(sidecar.PostLabelingDelay) == 'array'",
      "type(nifti_header) != \"null\""
    ],
    "checks": [
      "length(sidecar.PostLabelingDelay) == nifti_header.dim[4]"
    ]
  },
  "ASLPostLabelingDelayASLContextLength": {
    "issue": {
      "code": "POST_LABELING_DELAY_NOT_MATCHING_ASLCONTEXT_TSV",
      "message": "The number of values for 'PostLabelingDelay' for this file does not match the number of volumes\nin the associated 'aslcontext.tsv'.\n'PostLabelingDelay' is the time, in seconds, after the end of the labeling (for (P)CASL) or\nmiddle of the labeling pulse (for PASL) until the middle of the excitation pulse applied to\nthe imaging slab (for 3D acquisition) or first slice (for 2D acquisition).\nCan be a number (for a single-PLD time series) or an array of numbers (for multi-PLD and Look-Locker).\nIn the latter case, the array of numbers contains the PLD of each volume\n(that is, each 'control' and 'label')\nin the acquisition order.\nAny image within the time-series without a PLD (for example, an 'm0scan') is indicated by a zero.\nBased on DICOM Tags 0018,9079 Inversion Times and 0018,0082 InversionTime.\n",
      "level": "error"
    },
    "selectors": [
      "suffix == \"asl\"",
      "type(associations.aslcontext) != \"null\"",
      "type(sidecar.PostLabelingDelay) == 'array'"
    ],
    "checks": [
      "length(sidecar.PostLabelingDelay) == associations.aslcontext.n_rows"
    ]
  },
  "ASLLabelingDurationASLContextLength": {
    "issue": {
      "code": "LABELLING_DURATION_NOT_MATCHING_ASLCONTEXT_TSV",
      "message": "The number of values for 'LabelingDuration' for this file does not match the number of volumes\nin the associated 'aslcontext.tsv'.\n'LabelingDuration' is the total duration of the labeling pulse train, in seconds,\ncorresponding to the temporal width of the labeling bolus for `(P)CASL`.\nIn case all control-label volumes (or deltam or CBF) have the same `LabelingDuration`,\na scalar must be specified.\nIn case the control-label volumes (or deltam or cbf) have a different `LabelingDuration`,\nan array of numbers must be specified, for which any `m0scan` in the timeseries has a\n`LabelingDuration` of zero.\nIn case an array of numbers is provided, its length should be equal to the number of volumes\nspecified in the associated `aslcontext.tsv`.\nCorresponds to DICOM Tag 0018,9258 `ASL Pulse Train Duration`.\n",
      "level": "error"
    },
    "selectors": [
      "suffix == \"asl\"",
      "type(associations.aslcontext) != \"null\"",
      "type(sidecar.LabelingDuration) == 'array'"
    ],
    "checks": [
      "length(sidecar.LabelingDuration) == associations.aslcontext.n_rows"
    ]
  },
  "ASLRepetitionTimePreparationASLContextLength": {
    "issue": {
      "code": "REPETITIONTIMEPREPARATION_NOT_MATCHING_ASLCONTEXT_TSV",
      "message": "The number of values of 'RepetitionTimePreparation' for this file does not match the number of\nvolumes in the associated 'aslcontext.tsv'.\n'RepetitionTimePreparation' is the interval, in seconds, that it takes a preparation pulse block to\nre-appear at the beginning of the succeeding (essentially identical) pulse sequence block.\nThe data type number may apply to files from any MRI modality concerned with a single value for this field.\nThe data type array provides a value for each volume in a 4D dataset and should only be used when the\nvolume timing is critical for interpretation of the data, such as in ASL.\n",
      "level": "error"
    },
    "selectors": [
      "suffix == \"asl\"",
      "type(associations.aslcontext) != \"null\"",
      "type(sidecar.RepetitionTimePreparation) == 'array'"
    ],
    "checks": [
      "length(sidecar.RepetitionTimePreparation) == associations.aslcontext.n_rows"
    ]
  },
  "ASLBackgroundSuppressionNumberPulses": {
    "issue": {
      "code": "BACKGROUND_SUPPRESSION_PULSE_NUMBER_NOT_CONSISTENT",
      "message": "The 'BackgroundSuppressionNumberPulses' field is not consistent with the length of\n'BackgroundSuppressionPulseTime'.\n'BackgroundSuppressionNumberPulses' is the number of background suppression pulses used.\nNote that this excludes any effect of background suppression pulses applied before the labeling.\n",
      "level": "warning"
    },
    "selectors": [
      "suffix == \"asl\"",
      "\"BackgroundSuppressionNumberPulses\" in sidecar",
      "\"BackgroundSuppressionPulseTime\" in sidecar",
      "type(sidecar.BackgroundSuppressionPulseTime) == 'array'"
    ],
    "checks": [
      "length(sidecar.BackgroundSuppressionPulseTime) == sidecar.BackgroundSuppressionNumberPulses"
    ]
  },
  "ASLTotalAcquiredVolumesASLContextLength": {
    "issue": {
      "code": "TOTAL_ACQUIRED_VOLUMES_NOT_CONSISTENT",
      "message": "The number of values for 'TotalAcquiredVolumes' for this file does not match number of\nvolumes in the associated 'aslcontext.tsv'.\n'TotalAcquiredVolumes' is the original number of 3D volumes acquired for each volume defined in the\nassociated 'aslcontext.tsv'.\n",
      "level": "warning"
    },
    "selectors": [
      "suffix == \"asl\"",
      "type(associations.aslcontext) != \"null\"",
      "\"TotalAcquiredVolumes\" in sidecar"
    ],
    "checks": [
      "aslcontext.n_rows == sidecar.TotalAcquiredVolumes"
    ]
  },
  "PostLabelingDelayGreater": {
    "issue": {
      "code": "POST_LABELING_DELAY_GREATER",
      "message": "'PostLabelingDelay' is greater than 10. Are you sure it's expressed in seconds?\n",
      "level": "warning"
    },
    "selectors": [
      "suffix == \"asl\"",
      "sidecar.PostLabelingDelay != null"
    ],
    "checks": [
      "sidecar.PostLabelingDelay <= 10"
    ]
  },
  "BolusCutOffDelayTimeGreater": {
    "issue": {
      "code": "BOLUS_CUT_OFF_DELAY_TIME_GREATER",
      "message": "'BolusCutOffDelayTime' is greater than 10. Are you sure it's expressed in seconds?\n",
      "level": "warning"
    },
    "selectors": [
      "sidecar.BolusCutOffDelayTime != null"
    ],
    "checks": [
      "sidecar.BolusCutOffDelayTime <= 10"
    ]
  },
  "LabelingDurationGreater": {
    "issue": {
      "code": "LABELING_DURATION_GREATER",
      "message": "'LabelingDuration' is greater than 10. Are you sure it's expressed in seconds?\n",
      "level": "warning"
    },
    "selectors": [
      "sidecar.LabelingDuration != null"
    ],
    "checks": [
      "sidecar.LabelingDuration <= 10"
    ]
  },
  "ASLEchoTimeASLContextLength": {
    "issue": {
      "code": "ECHO_TIME_NOT_CONSISTENT",
      "message": "The number of values for 'EchoTime' for this file does not match number of volumes in the\nassociated 'aslcontext.tsv'.\n'EchoTime' is the echo time (TE) for the acquisition, specified in seconds.\n",
      "level": "warning"
    },
    "selectors": [
      "suffix == \"asl\"",
      "type(associations.aslcontext) != \"null\"",
      "type(sidecar.EchoTime) == 'array'"
    ],
    "checks": [
      "length(sidecar.EchoTime) == associations.aslcontext.n_rows"
    ]
  },
  "ASLM0TypeAbsentScan": {
    "issue": {
      "code": "M0Type_SET_INCORRECTLY_TO_ABSENT",
      "message": "You defined M0Type as 'absent' while including a separate 'm0scan.nii[.gz]' and\n'm0scan.json', or defining the 'M0Estimate' field.\nThis is not allowed, please check that this field are filled correctly.\n",
      "level": "error"
    },
    "selectors": [
      "suffix == \"asl\"",
      "type(associations.aslcontext) != \"null\"",
      "type(associations.m0scan) != \"null\"",
      "\"M0Type\" in sidecar"
    ],
    "checks": [
      "sidecar.M0Type != \"absent\""
    ]
  },
  "ASLM0TypeAbsentASLContext": {
    "issue": {
      "code": "M0Type_SET_INCORRECTLY_TO_ABSENT_IN_ASLCONTEXT",
      "message": "You defined M0Type as 'absent' while including an m0scan volume within the associated\n'aslcontext.tsv'.\nThis is not allowed, please check that this field are filled correctly.\n",
      "level": "error"
    },
    "selectors": [
      "suffix == \"asl\"",
      "type(associations.aslcontext) != \"null\"",
      "intersects(associations.aslcontext.volume_type, [\"m0scan\"])",
      "\"M0Type\" in sidecar"
    ],
    "checks": [
      "sidecar.M0Type != \"absent\""
    ]
  },
  "ASLM0TypeIncorrect": {
    "issue": {
      "code": "M0Type_SET_INCORRECTLY",
      "message": "M0Type was not defined correctly.\nIf 'M0Type' is equal to 'separate', the dataset should include an associated\n'm0scan.nii[.gz]' and 'm0scan.json' file.\n",
      "level": "error"
    },
    "selectors": [
      "suffix == \"asl\"",
      "type(associations.aslcontext) != \"null\"",
      "sidecar.M0Type == \"separate\""
    ],
    "checks": [
      "type(associations.m0scan) != \"null\""
    ]
  }
}