{
  "ACCELChannelCount": {
    "name": "ACCELChannelCount",
    "display_name": "Acceleration channel count",
    "description": "Number of acceleration channels.\n",
    "type": "integer",
    "minimum": 0
  },
  "Acknowledgements": {
    "name": "Acknowledgements",
    "display_name": "Acknowledgements",
    "description": "Text acknowledging contributions of individuals or institutions beyond\nthose listed in Authors or Funding.\n",
    "type": "string"
  },
  "AcquisitionDuration": {
    "name": "AcquisitionDuration",
    "display_name": "Acquisition Duration",
    "description": "Duration (in seconds) of volume acquisition.\nCorresponds to DICOM Tag 0018, 9073 `Acquisition Duration`.\nThis field is mutually exclusive with `\"RepetitionTime\"`.\n",
    "type": "number",
    "exclusiveMinimum": 0,
    "unit": "s"
  },
  "AcquisitionMode": {
    "name": "AcquisitionMode",
    "display_name": "Acquisition Mode",
    "description": "Type of acquisition of the PET data (for example, `\"list mode\"`).\n",
    "type": "string"
  },
  "AcquisitionVoxelSize": {
    "name": "AcquisitionVoxelSize",
    "display_name": "Acquisition Voxel Size",
    "description": "An array of numbers with a length of 3, in millimeters.\nThis parameter denotes the original acquisition voxel size,\nexcluding any inter-slice gaps and before any interpolation or resampling\nwithin reconstruction or image processing.\nAny point spread function effects, for example due to T2-blurring,\nthat would decrease the effective resolution are not considered here.\n",
    "type": "array",
    "minItems": 3,
    "maxItems": 3,
    "items": {
      "type": "number",
      "exclusiveMinimum": 0,
      "unit": "mm"
    }
  },
  "Anaesthesia": {
    "name": "Anaesthesia",
    "display_name": "Anaesthesia",
    "description": "Details of anaesthesia used, if any.\n",
    "type": "string"
  },
  "AnalyticalApproach": {
    "name": "AnalyticalApproach",
    "display_name": "Analytical Approach",
    "description": "Methodology or methodologies used to analyze the `\"GeneticLevel\"`.\nValues MUST be taken from the\n[database of Genotypes and Phenotypes\n(dbGaP)](https://www.ncbi.nlm.nih.gov/gap/advanced)\nunder /Study/Molecular Data Type (for example, SNP Genotypes (Array) or\nMethylation (CpG).\n",
    "anyOf": [
      {
        "type": "string"
      },
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    ]
  },
  "AnatomicalLandmarkCoordinateSystem": {
    "name": "AnatomicalLandmarkCoordinateSystem",
    "display_name": "Anatomical Landmark Coordinate System",
    "description": "Defines the coordinate system for the anatomical landmarks.\nSee the [Coordinate Systems Appendix](SPEC_ROOT/appendices/coordinate-systems.md)\nfor a list of restricted keywords for coordinate systems.\nIf `\"Other\"`, provide definition of the coordinate system in\n`\"AnatomicalLandmarkCoordinateSystemDescription\"`.\n",
    "anyOf": [
      {
        "$ref": "objects.enums._MEGCoordSys"
      },
      {
        "$ref": "objects.enums._EEGCoordSys"
      },
      {
        "$ref": "objects.enums._StandardTemplateCoordSys"
      },
      {
        "$ref": "objects.enums._StandardTemplateDeprecatedCoordSys"
      }
    ]
  },
  "AnatomicalLandmarkCoordinateSystemDescription": {
    "name": "AnatomicalLandmarkCoordinateSystemDescription",
    "display_name": "Anatomical Landmark Coordinate System Description",
    "description": "Free-form text description of the coordinate system.\nMay also include a link to a documentation page or paper describing the\nsystem in greater detail.\n",
    "type": "string"
  },
  "AnatomicalLandmarkCoordinateUnits": {
    "name": "AnatomicalLandmarkCoordinateUnits",
    "display_name": "Anatomical Landmark Coordinate Units",
    "description": "Units of the coordinates of `\"AnatomicalLandmarkCoordinateSystem\"`.\n",
    "type": "string",
    "enum": [
      "m",
      "mm",
      "cm",
      "n/a"
    ]
  },
  "AnatomicalLandmarkCoordinates": {
    "name": "AnatomicalLandmarkCoordinates",
    "display_name": "Anatomical Landmark Coordinates",
    "description": "Key-value pairs of the labels and 3-D digitized locations of anatomical landmarks,\ninterpreted following the `\"AnatomicalLandmarkCoordinateSystem\"`\n(for example, `{\"NAS\": [12.7,21.3,13.9], \"LPA\": [5.2,11.3,9.6],\n\"RPA\": [20.2,11.3,9.1]}`.\nEach array MUST contain three numeric values corresponding to x, y, and z\naxis of the coordinate system in that exact order.\n",
    "type": "object",
    "additionalProperties": {
      "type": "array",
      "items": {
        "type": "number"
      },
      "minItems": 3,
      "maxItems": 3
    }
  },
  "AnatomicalLandmarkCoordinates__mri": {
    "name": "AnatomicalLandmarkCoordinates",
    "display_name": "Anatomical Landmark Coordinates",
    "description": "Key-value pairs of any number of additional anatomical landmarks and their\ncoordinates in voxel units (where first voxel has index 0,0,0)\nrelative to the associated anatomical MRI\n(for example, `{\"AC\": [127,119,149], \"PC\": [128,93,141],\n\"IH\": [131,114,206]}`, or `{\"NAS\": [127,213,139], \"LPA\": [52,113,96],\n\"RPA\": [202,113,91]}`).\nEach array MUST contain three numeric values corresponding to x, y, and z\naxis of the coordinate system in that exact order.\n",
    "type": "object",
    "additionalProperties": {
      "type": "array",
      "items": {
        "type": "number"
      },
      "minItems": 3,
      "maxItems": 3
    }
  },
  "ANGACCELChannelCount": {
    "name": "ANGACCELChannelCount",
    "display_name": "Angular acceleration channel count",
    "description": "Number of angular acceleration channels.\n",
    "type": "integer",
    "minimum": 0
  },
  "ArterialSpinLabelingType": {
    "name": "ArterialSpinLabelingType",
    "display_name": "Arterial Spin Labeling Type",
    "description": "The arterial spin labeling type.\n",
    "type": "string",
    "enum": [
      {
        "$ref": "objects.enums.CASL.value"
      },
      {
        "$ref": "objects.enums.PCASL.value"
      },
      {
        "$ref": "objects.enums.PASL.value"
      }
    ]
  },
  "AssociatedEmptyRoom": {
    "name": "AssociatedEmptyRoom",
    "display_name": "Associated Empty Room",
    "description": "One or more [BIDS URIs](SPEC_ROOT/common-principles.md#bids-uri)\npointing to empty-room file(s) associated with the subject's MEG recording.\nUsing forward-slash separated paths relative to the dataset root is\n[DEPRECATED](SPEC_ROOT/common-principles.md#definitions).\n",
    "anyOf": [
      {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "string",
              "format": "dataset_relative"
            },
            {
              "type": "string",
              "format": "bids_uri"
            }
          ]
        }
      },
      {
        "type": "string",
        "format": "dataset_relative"
      },
      {
        "type": "string",
        "format": "bids_uri"
      }
    ]
  },
  "AttenuationCorrection": {
    "name": "AttenuationCorrection",
    "display_name": "Attenuation Correction",
    "description": "Short description of the attenuation correction method used.\n",
    "type": "string"
  },
  "AttenuationCorrectionMethodReference": {
    "name": "AttenuationCorrectionMethodReference",
    "display_name": "Attenuation Correction Method Reference",
    "description": "Reference paper for the attenuation correction method used.\n",
    "type": "string"
  },
  "Authors": {
    "name": "Authors",
    "display_name": "Authors",
    "description": "List of individuals who contributed to the creation/curation of the dataset.\n",
    "type": "array",
    "items": {
      "type": "string"
    }
  },
  "B0FieldIdentifier": {
    "name": "B0FieldIdentifier",
    "display_name": "B0 Field Identifier",
    "description": "The presence of this key states that this particular 3D or 4D image MAY be\nused for fieldmap estimation purposes.\nEach `\"B0FieldIdentifier\"` MUST be a unique string within one participant's tree,\nshared only by the images meant to be used as inputs for the estimation of a\nparticular instance of the *B<sub>0</sub> field* estimation.\nIt is RECOMMENDED to derive this identifier from DICOM Tags, for example,\nDICOM tag 0018, 1030 `Protocol Name`, or DICOM tag 0018, 0024 `Sequence Name`\nwhen the former is not defined (for example, in GE devices.)\n",
    "anyOf": [
      {
        "type": "string"
      },
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    ]
  },
  "B0FieldSource": {
    "name": "B0FieldSource",
    "display_name": "B0 Field Source",
    "description": "At least one existing `\"B0FieldIdentifier\"` defined by images in the\nparticipant's tree.\nThis field states the *B<sub>0</sub> field* estimation designated by the\n`\"B0FieldIdentifier\"` that may be used to correct the dataset for distortions\ncaused by B<sub>0</sub> inhomogeneities.\n`\"B0FieldSource\"` and `\"B0FieldIdentifier\"` MAY both be present for images that\nare used to estimate their own B<sub>0</sub> field, for example, in \"pepolar\"\nacquisitions.\n",
    "anyOf": [
      {
        "type": "string"
      },
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    ]
  },
  "BIDSVersion": {
    "name": "BIDSVersion",
    "display_name": "BIDS Version",
    "description": "The version of the BIDS standard that was used.\n",
    "type": "string"
  },
  "BackgroundSuppression": {
    "name": "BackgroundSuppression",
    "display_name": "Background Suppression",
    "description": "Boolean indicating if background suppression is used.\n",
    "type": "boolean"
  },
  "BackgroundSuppressionNumberPulses": {
    "name": "BackgroundSuppressionNumberPulses",
    "display_name": "Background Suppression Number Pulses",
    "description": "The number of background suppression pulses used.\nNote that this excludes any effect of background suppression pulses applied\nbefore the labeling.\n",
    "type": "number",
    "minimum": 0
  },
  "BackgroundSuppressionPulseTime": {
    "name": "BackgroundSuppressionPulseTime",
    "display_name": "Background Suppression Pulse Time",
    "description": "Array of numbers containing timing, in seconds,\nof the background suppression pulses with respect to the start of the\nlabeling.\nIn case of multi-PLD with different background suppression pulse times,\nonly the pulse time of the first PLD should be defined.\n",
    "type": "array",
    "items": {
      "type": "number",
      "minimum": 0,
      "unit": "s"
    }
  },
  "BasedOn": {
    "name": "BasedOn",
    "display_name": "Based On",
    "description": "List of files in a file collection to generate the map.\nFieldmaps are also listed, if involved in the processing.\nThis field is DEPRECATED, and this metadata SHOULD be recorded in the\n`Sources` field using [BIDS URIs](SPEC_ROOT/common-principles.md#bids-uri)\nto distinguish sources from different datasets.\n",
    "anyOf": [
      {
        "type": "string",
        "format": "participant_relative"
      },
      {
        "type": "array",
        "items": {
          "type": "string",
          "format": "participant_relative"
        }
      }
    ]
  },
  "BloodDensity": {
    "name": "BloodDensity",
    "display_name": "Blood Density",
    "description": "Measured blood density. Unit of blood density should be in `\"g/mL\"`.\n",
    "type": "number",
    "unit": "g/mL"
  },
  "BodyPart": {
    "name": "BodyPart",
    "display_name": "Body Part",
    "description": "Body part of the organ / body region scanned.\n",
    "type": "string"
  },
  "BodyPartDetails": {
    "name": "BodyPartDetails",
    "display_name": "Body Part Details",
    "description": "Additional details about body part or location (for example: `\"corpus callosum\"`).\n",
    "type": "string"
  },
  "BodyPartDetailsOntology": {
    "name": "BodyPartDetailsOntology",
    "display_name": "Body Part Details Ontology",
    "description": "[URI](SPEC_ROOT/common-principles.md#uniform-resource-indicator) of ontology used for\nBodyPartDetails (for example: `\"https://www.ebi.ac.uk/ols/ontologies/uberon\"`).\n",
    "type": "string",
    "format": "uri"
  },
  "BolusCutOffDelayTime": {
    "name": "BolusCutOffDelayTime",
    "display_name": "Bolus Cut Off Delay Time",
    "description": "Duration between the end of the labeling and the start of the bolus cut-off\nsaturation pulse(s), in seconds.\nThis can be a number or array of numbers, of which the values must be\nnon-negative and monotonically increasing, depending on the number of bolus\ncut-off saturation pulses.\nFor Q2TIPS, only the values for the first and last bolus cut-off saturation\npulses are provided.\nBased on DICOM Tag 0018, 925F `ASL Bolus Cut-off Delay Time`.\n",
    "anyOf": [
      {
        "type": "number",
        "minimum": 0,
        "unit": "s"
      },
      {
        "type": "array",
        "items": {
          "type": "number",
          "unit": "s",
          "minimum": 0
        }
      }
    ]
  },
  "BolusCutOffFlag": {
    "name": "BolusCutOffFlag",
    "display_name": "Bolus Cut Off Flag",
    "description": "Boolean indicating if a bolus cut-off technique is used.\nCorresponds to DICOM Tag 0018, 925C `ASL Bolus Cut-off Flag`.\n",
    "type": "boolean"
  },
  "BolusCutOffTechnique": {
    "name": "BolusCutOffTechnique",
    "display_name": "Bolus Cut Off Technique",
    "description": "Name of the technique used, for example `\"Q2TIPS\"`, `\"QUIPSS\"`, `\"QUIPSSII\"`.\nCorresponds to DICOM Tag 0018, 925E `ASL Bolus Cut-off Technique`.\n",
    "type": "string"
  },
  "BrainLocation": {
    "name": "BrainLocation",
    "display_name": "Brain Location",
    "description": "Refers to the location in space of the `\"TissueOrigin\"`.\nValues may be an MNI coordinate,\na label taken from the\n[Allen Brain Atlas](https://atlas.brain-map.org/atlas?atlas=265297125&plate=\\\n112360888&structure=4392&x=40348.15104166667&y=46928.75&zoom=-7&resolution=\\\n206.60&z=3),\nor layer to refer to layer-specific gene expression,\nwhich can also tie up with laminar fMRI.\n",
    "type": "string"
  },
  "CASLType": {
    "name": "CASLType",
    "display_name": "CASL Type",
    "description": "Describes if a separate coil is used for labeling.\n",
    "type": "string",
    "enum": [
      {
        "$ref": "objects.enums.single_coil.value"
      },
      {
        "$ref": "objects.enums.double_coil.value"
      }
    ]
  },
  "CapManufacturer": {
    "name": "CapManufacturer",
    "display_name": "Cap Manufacturer",
    "description": "Name of the cap manufacturer (for example, `\"EasyCap\"`).\n",
    "type": "string"
  },
  "CapManufacturersModelName": {
    "name": "CapManufacturersModelName",
    "display_name": "Cap Manufacturers Model Name",
    "description": "Manufacturer's designation of the cap model\n(for example, `\"actiCAP 64 Ch Standard-2\"`).\n",
    "type": "string"
  },
  "CellType": {
    "name": "CellType",
    "display_name": "Cell Type",
    "description": "Describes the type of cell analyzed.\nValues SHOULD come from the\n[cell ontology](https://obofoundry.org/ontology/cl.html).\n",
    "type": "string"
  },
  "ChunkTransformationMatrix": {
    "name": "ChunkTransformationMatrix",
    "display_name": "Chunk Transformation Matrix",
    "description": "3x3 or 4x4 affine transformation matrix describing spatial chunk transformation,\nfor 2D and 3D respectively (for examples: `[[2, 0, 0], [0, 3, 0], [0, 0, 1]]`\nin 2D for 2x and 3x scaling along the first and second axis respectively; or\n`[[1, 0, 0, 0], [0, 2, 0, 0], [0, 0, 3, 0], [0, 0, 0, 1]]` in 3D for 2x and 3x\nscaling along the second and third axis respectively).\nNote that non-spatial dimensions like time and channel are not included in the\ntransformation matrix.\n",
    "anyOf": [
      {
        "type": "array",
        "minItems": 3,
        "maxItems": 3,
        "items": {
          "type": "array",
          "minItems": 3,
          "maxItems": 3,
          "items": {
            "type": "number"
          }
        }
      },
      {
        "type": "array",
        "minItems": 4,
        "maxItems": 4,
        "items": {
          "type": "array",
          "minItems": 4,
          "maxItems": 4,
          "items": {
            "type": "number"
          }
        }
      }
    ]
  },
  "ChunkTransformationMatrixAxis": {
    "name": "ChunkTransformationMatrixAxis",
    "display_name": "Chunk Transformation Matrix Axis",
    "description": "Describe the axis of the ChunkTransformationMatrix\n(for examples: `[\"X\", \"Y\"]` or `[\"Z\", \"Y\", \"X\"]`).\n",
    "type": "array",
    "minItems": 2,
    "maxItems": 3,
    "items": {
      "type": "string"
    }
  },
  "Code": {
    "name": "Code",
    "display_name": "Code",
    "description": "[URI](SPEC_ROOT/common-principles.md#uniform-resource-indicator)\nof the code used to present the stimuli.\nPersistent identifiers such as DOIs are preferred.\nIf multiple versions of code may be hosted at the same location,\nrevision-specific URIs are recommended.\n",
    "type": "string",
    "format": "uri"
  },
  "CogAtlasID": {
    "name": "CogAtlasID",
    "display_name": "Cognitive Atlas ID",
    "description": "[URI](SPEC_ROOT/common-principles.md#uniform-resource-indicator)\nof the corresponding [Cognitive Atlas](https://www.cognitiveatlas.org/)\nTask term.\n",
    "type": "string",
    "format": "uri"
  },
  "CogPOID": {
    "name": "CogPOID",
    "display_name": "Cognitive Paradigm Ontology ID",
    "description": "[URI](SPEC_ROOT/common-principles.md#uniform-resource-indicator)\nof the corresponding [CogPO](http://www.cogpo.org/) term.\n",
    "type": "string",
    "format": "uri"
  },
  "CoilCombinationMethod": {
    "name": "CoilCombinationMethod",
    "display_name": "Coil Combination Method",
    "description": "Almost all fMRI studies using phased-array coils use root-sum-of-squares\n(rSOS) combination, but other methods exist.\nThe image reconstruction is changed by the coil combination method\n(as for the matrix coil mode above),\nso anything non-standard should be reported.\n",
    "type": "string"
  },
  "Columns": {
    "name": "Columns",
    "display_name": "Columns",
    "description": "Names of columns in file.\n",
    "type": "array",
    "items": {
      "type": "string"
    }
  },
  "ContinuousHeadLocalization": {
    "name": "ContinuousHeadLocalization",
    "display_name": "Continuous Head Localization",
    "description": "`true` or `false` value indicating whether continuous head localisation\nwas performed.\n",
    "type": "boolean"
  },
  "ContrastBolusIngredient": {
    "name": "ContrastBolusIngredient",
    "display_name": "Contrast Bolus Ingredient",
    "description": "Active ingredient of agent.\nCorresponds to DICOM Tag 0018, 1048 `Contrast/Bolus Ingredient`.\n",
    "type": "string",
    "enum": [
      {
        "$ref": "objects.enums.IODINE.value"
      },
      {
        "$ref": "objects.enums.GADOLINIUM.value"
      },
      {
        "$ref": "objects.enums.CARBON_DIOXIDE.value"
      },
      {
        "$ref": "objects.enums.BARIUM.value"
      },
      {
        "$ref": "objects.enums.XENON.value"
      },
      "UNKNOWN",
      "NONE"
    ]
  },
  "DCOffsetCorrection": {
    "name": "DCOffsetCorrection",
    "display_name": "DC Offset Correction",
    "description": "A description of the method (if any) used to correct for a DC offset.\nIf the method used was subtracting the mean value for each channel,\nuse \"mean\".\n",
    "type": "string"
  },
  "DatasetDOI": {
    "name": "DatasetDOI",
    "display_name": "DatasetDOI",
    "description": "The Digital Object Identifier of the dataset (not the corresponding paper).\nDOIs SHOULD be expressed as a valid\n[URI](SPEC_ROOT/common-principles.md#uniform-resource-indicator);\nbare DOIs such as `10.0.2.3/dfjj.10` are\n[DEPRECATED](SPEC_ROOT/common-principles.md#definitions).\n",
    "type": "string",
    "format": "uri"
  },
  "DatasetLinks": {
    "name": "DatasetLinks",
    "display_name": "Dataset Links",
    "description": "Used to map a given `<dataset-name>` from a [BIDS URI](SPEC_ROOT/common-principles.md#bids-uri)\nof the form `bids:<dataset-name>:path/within/dataset` to a local or remote location.\nThe `<dataset-name>`: `\"\"` (an empty string) is a reserved keyword that MUST NOT be a key in\n`DatasetLinks` (example: `bids::path/within/dataset`).\n",
    "type": "object",
    "additionalProperties": {
      "type": "string",
      "format": "uri"
    }
  },
  "DatasetType": {
    "name": "DatasetType",
    "display_name": "Dataset Type",
    "description": "The interpretation of the dataset.\nFor backwards compatibility, the default value is `\"raw\"`.\n",
    "type": "string",
    "enum": [
      {
        "$ref": "objects.enums.raw.value"
      },
      {
        "$ref": "objects.enums.derivative.value"
      }
    ]
  },
  "DecayCorrectionFactor": {
    "name": "DecayCorrectionFactor",
    "display_name": "Decay Correction Factor",
    "description": "Decay correction factor for each frame.\n",
    "type": "array",
    "items": {
      "type": "number"
    }
  },
  "DelayAfterTrigger": {
    "name": "DelayAfterTrigger",
    "display_name": "Delay After Trigger",
    "description": "Duration (in seconds) from trigger delivery to scan onset.\nThis delay is commonly caused by adjustments and loading times.\nThis specification is entirely independent of\n`\"NumberOfVolumesDiscardedByScanner\"` or `\"NumberOfVolumesDiscardedByUser\"`,\nas the delay precedes the acquisition.\n",
    "type": "number",
    "unit": "s"
  },
  "DelayTime": {
    "name": "DelayTime",
    "display_name": "Delay Time",
    "description": "User specified time (in seconds) to delay the acquisition of data for the\nfollowing volume.\nIf the field is not present it is assumed to be set to zero.\nCorresponds to Siemens CSA header field `lDelayTimeInTR`.\nThis field is REQUIRED for sparse sequences using the `\"RepetitionTime\"` field\nthat do not have the `\"SliceTiming\"` field set to allowed for accurate\ncalculation of \"acquisition time\".\nThis field is mutually exclusive with `\"VolumeTiming\"`.\n",
    "type": "number",
    "unit": "s"
  },
  "Delimiter": {
    "name": "Delimiter",
    "display_name": "Delimiter",
    "description": "If rows in a column may be interpreted as a lists of values, the character that\nseparates one value from the next.\n",
    "type": "string"
  },
  "Density": {
    "name": "Density",
    "display_name": "Density",
    "description": "Specifies the interpretation of the density keyword.\nIf an object is used, then the keys should be values for the `den` entity\nand values should be descriptions of those `den` values.\n",
    "anyOf": [
      {
        "type": "string"
      },
      {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      }
    ]
  },
  "Derivative": {
    "name": "Derivative",
    "display_name": "Derivative",
    "description": "Indicates that values in the corresponding column are transformations of values\nfrom other columns (for example a summary score based on a subset of items in a\nquestionnaire).\n",
    "type": "boolean"
  },
  "Description": {
    "name": "Description",
    "display_name": "Description",
    "description": "Free-form natural language description.\n",
    "type": "string"
  },
  "DetectorType": {
    "name": "DetectorType",
    "display_name": "Detector Type",
    "description": "Type of detector. This is a free form description with the following suggested terms:\n`\"SiPD\"`, `\"APD\"`. Preferably a specific model/part number is supplied.\nIf individual channels have different `DetectorType`,\nthen the field here should be specified as `\"mixed\"`\nand this column should be included in `optodes.tsv`.\n",
    "anyOf": [
      {
        "type": "string",
        "format": "unit"
      },
      {
        "type": "string",
        "enum": [
          {
            "$ref": "objects.enums.mixed.value"
          }
        ]
      }
    ]
  },
  "DeviceSerialNumber": {
    "name": "DeviceSerialNumber",
    "display_name": "Device Serial Number",
    "description": "The serial number of the equipment that produced the measurements.\nA pseudonym can also be used to prevent the equipment from being\nidentifiable, so long as each pseudonym is unique within the dataset.\n",
    "type": "string"
  },
  "DewarPosition": {
    "name": "DewarPosition",
    "display_name": "Dewar Position",
    "description": "Position of the dewar during the MEG scan:\n`\"upright\"`, `\"supine\"` or `\"degrees\"` of angle from vertical:\nfor example on CTF systems, `\"upright=15\u00b0, supine=90\u00b0\"`.\n",
    "type": "string"
  },
  "DigitizedHeadPoints": {
    "name": "DigitizedHeadPoints",
    "display_name": "Digitized Head Points",
    "description": "`true` or `false` value indicating whether head points outlining the\nscalp/face surface are contained within this recording.\n",
    "type": "boolean"
  },
  "DigitizedHeadPoints__coordsystem": {
    "name": "DigitizedHeadPoints",
    "display_name": "Digitized Head Points",
    "description": "Relative path to the file containing the locations of digitized head points\ncollected during the session (for example, `\"sub-01_headshape.pos\"`).\nRECOMMENDED for all MEG systems, especially for CTF and BTi/4D.\nFor Neuromag/Elekta/MEGIN, the head points will be stored in the `.fif` file.\n",
    "type": "string",
    "format": "file_relative"
  },
  "DigitizedHeadPointsCoordinateSystem": {
    "name": "DigitizedHeadPointsCoordinateSystem",
    "display_name": "Digitized Head Points Coordinate System",
    "description": "Defines the coordinate system for the digitized head points.\nSee the\n[Coordinate Systems Appendix](SPEC_ROOT/appendices/coordinate-systems.md)\nfor a list of restricted keywords for coordinate systems.\nIf `\"Other\"`, provide definition of the coordinate system in\n`\"DigitizedHeadPointsCoordinateSystemDescription\"`.\n",
    "anyOf": [
      {
        "$ref": "objects.enums._MEGCoordSys"
      },
      {
        "$ref": "objects.enums._EEGCoordSys"
      },
      {
        "$ref": "objects.enums._StandardTemplateCoordSys"
      },
      {
        "$ref": "objects.enums._StandardTemplateDeprecatedCoordSys"
      }
    ]
  },
  "DigitizedHeadPointsCoordinateSystemDescription": {
    "name": "DigitizedHeadPointsCoordinateSystemDescription",
    "display_name": "Digitized Head Points Coordinate System Description",
    "description": "Free-form text description of the coordinate system.\nMay also include a link to a documentation page or paper describing the\nsystem in greater detail.\n",
    "type": "string"
  },
  "DigitizedHeadPointsCoordinateUnits": {
    "name": "DigitizedHeadPointsCoordinateUnits",
    "display_name": "Digitized Head Points Coordinate Units",
    "description": "Units of the coordinates of `\"DigitizedHeadPointsCoordinateSystem\"`.\n",
    "type": "string",
    "enum": [
      "m",
      "mm",
      "cm",
      "n/a"
    ]
  },
  "DigitizedLandmarks": {
    "name": "DigitizedLandmarks",
    "display_name": "Digitized Landmarks",
    "description": "`true` or `false` value indicating whether anatomical landmark points\n(fiducials) are contained within this recording.\n",
    "type": "boolean"
  },
  "DispersionConstant": {
    "name": "DispersionConstant",
    "display_name": "Dispersion Constant",
    "description": "External dispersion time constant resulting from tubing in default unit\nseconds.\n",
    "type": "number",
    "unit": "s"
  },
  "DispersionCorrected": {
    "name": "DispersionCorrected",
    "display_name": "Dispersion Corrected",
    "description": "Boolean flag specifying whether the blood data have been dispersion-corrected.\nNOTE: not customary for manual samples, and hence should be set to `false`.\n",
    "type": "boolean"
  },
  "DoseCalibrationFactor": {
    "name": "DoseCalibrationFactor",
    "display_name": "Dose Calibration Factor",
    "description": "Multiplication factor used to transform raw data (in counts/sec) to meaningful unit (Bq/ml).\nCorresponds to DICOM Tag 0054, 1322 `Dose Calibration Factor`.\n",
    "type": "number"
  },
  "DwellTime": {
    "name": "DwellTime",
    "display_name": "Dwell Time",
    "description": "Actual dwell time (in seconds) of the receiver per point in the readout\ndirection, including any oversampling.\nFor Siemens, this corresponds to DICOM field 0019, 1018 (in ns).\nThis value is necessary for the optional readout distortion correction of\nanatomicals in the HCP Pipelines.\nIt also usefully provides a handle on the readout bandwidth,\nwhich isn't captured in the other metadata tags.\nNot to be confused with `\"EffectiveEchoSpacing\"`, and the frequent mislabeling\nof echo spacing (which is spacing in the phase encoding direction) as\n\"dwell time\" (which is spacing in the readout direction).\n",
    "type": "number",
    "unit": "s"
  },
  "ECGChannelCount": {
    "name": "ECGChannelCount",
    "display_name": "ECG Channel Count",
    "description": "Number of ECG channels.\n",
    "type": "integer",
    "minimum": 0
  },
  "ECOGChannelCount": {
    "name": "ECOGChannelCount",
    "display_name": "ECOG Channel Count",
    "description": "Number of ECoG channels.\n",
    "type": "integer",
    "minimum": 0
  },
  "EEGChannelCount": {
    "name": "EEGChannelCount",
    "display_name": "EEG Channel Count",
    "description": "Number of EEG channels recorded simultaneously (for example, `21`).\n",
    "type": "integer",
    "minimum": 0
  },
  "EEGCoordinateSystem": {
    "name": "EEGCoordinateSystem",
    "display_name": "EEG Coordinate System",
    "description": "Defines the coordinate system for the EEG sensors.\n\nSee the\n[Coordinate Systems Appendix](SPEC_ROOT/appendices/coordinate-systems.md)\nfor a list of restricted keywords for coordinate systems.\nIf `\"Other\"`, provide definition of the coordinate system in\n`EEGCoordinateSystemDescription`.\n",
    "anyOf": [
      {
        "$ref": "objects.enums._MEGCoordSys"
      },
      {
        "$ref": "objects.enums._EEGCoordSys"
      },
      {
        "$ref": "objects.enums._StandardTemplateCoordSys"
      },
      {
        "$ref": "objects.enums._StandardTemplateDeprecatedCoordSys"
      }
    ]
  },
  "EEGCoordinateSystemDescription": {
    "name": "EEGCoordinateSystemDescription",
    "display_name": "EEG Coordinate System Description",
    "description": "Free-form text description of the coordinate system.\nMay also include a link to a documentation page or paper describing the\nsystem in greater detail.\n",
    "type": "string"
  },
  "EEGCoordinateUnits": {
    "name": "EEGCoordinateUnits",
    "display_name": "EEG Coordinate Units",
    "description": "Units of the coordinates of `EEGCoordinateSystem`.\n",
    "type": "string",
    "enum": [
      "m",
      "mm",
      "cm",
      "n/a"
    ]
  },
  "EEGGround": {
    "name": "EEGGround",
    "display_name": "EEG Ground",
    "description": "Description of the location of the ground electrode\n(for example, `\"placed on right mastoid (M2)\"`).\n",
    "type": "string"
  },
  "EEGPlacementScheme": {
    "name": "EEGPlacementScheme",
    "display_name": "EEG Placement Scheme",
    "description": "Placement scheme of EEG electrodes.\nEither the name of a standardized placement system (for example, `\"10-20\"`)\nor a list of standardized electrode names (for example, `[\"Cz\", \"Pz\"]`).\n",
    "type": "string"
  },
  "EEGReference": {
    "name": "EEGReference",
    "display_name": "EEG Reference",
    "description": "General description of the reference scheme used and (when applicable) of\nlocation of the reference electrode in the raw recordings\n(for example, `\"left mastoid\"`, `\"Cz\"`, `\"CMS\"`).\nIf different channels have a different reference,\nthis field should have a general description and the channel specific\nreference should be defined in the `channels.tsv` file.\n",
    "type": "string"
  },
  "EMGChannelCount": {
    "name": "EMGChannelCount",
    "display_name": "EMG Channel Count",
    "description": "Number of EMG channels.\n",
    "type": "integer",
    "minimum": 0
  },
  "EOGChannelCount": {
    "name": "EOGChannelCount",
    "display_name": "EOG Channel Count",
    "description": "Number of EOG channels.\n",
    "type": "integer",
    "minimum": 0
  },
  "EchoTime": {
    "name": "EchoTime",
    "display_name": "Echo Time",
    "description": "The echo time (TE) for the acquisition, specified in seconds.\nCorresponds to DICOM Tag 0018, 0081 `Echo Time`\n(please note that the DICOM term is in milliseconds not seconds).\nThe data type number may apply to files from any MRI modality concerned with\na single value for this field, or to the files in a\n[file collection](SPEC_ROOT/appendices/file-collections.md)\nwhere the value of this field is iterated using the\n[`echo` entity](SPEC_ROOT/appendices/entities.md#echo).\nThe data type array provides a value for each volume in a 4D dataset and\nshould only be used when the volume timing is critical for interpretation\nof the data, such as in\n[ASL](SPEC_ROOT/modality-specific-files/magnetic-resonance-imaging-data.md#\\\narterial-spin-labeling-perfusion-data)\nor variable echo time fMRI sequences.\n",
    "anyOf": [
      {
        "type": "number",
        "unit": "s",
        "exclusiveMinimum": 0
      },
      {
        "type": "array",
        "items": {
          "type": "number",
          "unit": "s",
          "exclusiveMinimum": 0
        }
      }
    ]
  },
  "EchoTime1": {
    "name": "EchoTime1",
    "display_name": "Echo Time1",
    "description": "The time (in seconds) when the first (shorter) echo occurs.\n",
    "type": "number",
    "unit": "s",
    "exclusiveMinimum": 0
  },
  "EchoTime2": {
    "name": "EchoTime2",
    "display_name": "Echo Time2",
    "description": "The time (in seconds) when the second (longer) echo occurs.\n",
    "type": "number",
    "unit": "s",
    "exclusiveMinimum": 0
  },
  "EchoTime__fmap": {
    "name": "EchoTime",
    "display_name": "Echo Time",
    "description": "The time (in seconds) when the echo corresponding to this map was acquired.\n",
    "type": "number",
    "unit": "s",
    "exclusiveMinimum": 0
  },
  "EffectiveEchoSpacing": {
    "name": "EffectiveEchoSpacing",
    "display_name": "Effective Echo Spacing",
    "description": "The \"effective\" sampling interval, specified in seconds,\nbetween lines in the phase-encoding direction,\ndefined based on the size of the reconstructed image in the phase direction.\nIt is frequently, but incorrectly, referred to as \"dwell time\"\n(see the `\"DwellTime\"` parameter for actual dwell time).\nIt is required for unwarping distortions using field maps.\nNote that beyond just in-plane acceleration,\na variety of other manipulations to the phase encoding need to be accounted\nfor properly, including partial fourier, phase oversampling,\nphase resolution, phase field-of-view and interpolation.\n",
    "type": "number",
    "exclusiveMinimum": 0,
    "unit": "s"
  },
  "ElectricalStimulation": {
    "name": "ElectricalStimulation",
    "display_name": "Electrical Stimulation",
    "description": "Boolean field to specify if electrical stimulation was done during the\nrecording (options are `true` or `false`). Parameters for event-like\nstimulation should be specified in the `events.tsv` file.\n",
    "type": "boolean"
  },
  "ElectricalStimulationParameters": {
    "name": "ElectricalStimulationParameters",
    "display_name": "Electrical Stimulation Parameters",
    "description": "Free form description of stimulation parameters, such as frequency or shape.\nSpecific onsets can be specified in the `events.tsv` file.\nSpecific shapes can be described here in freeform text.\n",
    "type": "string"
  },
  "ElectrodeManufacturer": {
    "name": "ElectrodeManufacturer",
    "display_name": "Electrode Manufacturer",
    "description": "Can be used if all electrodes are of the same manufacturer\n(for example, `\"AD-TECH\"`, `\"DIXI\"`).\nIf electrodes of different manufacturers are used,\nplease use the corresponding table in the `_electrodes.tsv` file.\n",
    "type": "string"
  },
  "ElectrodeManufacturersModelName": {
    "name": "ElectrodeManufacturersModelName",
    "display_name": "Electrode Manufacturers Model Name",
    "description": "If different electrode types are used,\nplease use the corresponding table in the `_electrodes.tsv` file.\n",
    "type": "string"
  },
  "EpochLength": {
    "name": "EpochLength",
    "display_name": "Epoch Length",
    "description": "Duration of individual epochs in seconds (for example, `1`)\nin case of epoched data.\nIf recording was continuous or discontinuous, leave out the field.\n",
    "type": "number",
    "minimum": 0
  },
  "EstimationAlgorithm": {
    "name": "EstimationAlgorithm",
    "display_name": "Estimation Algorithm",
    "description": "Type of algorithm used to perform fitting\n(for example, `\"linear\"`, `\"non-linear\"`, `\"LM\"` and such).\n",
    "type": "string"
  },
  "EstimationReference": {
    "name": "EstimationReference",
    "display_name": "Estimation Reference",
    "description": "Reference to the study/studies on which the implementation is based.\n",
    "type": "string"
  },
  "EthicsApprovals": {
    "name": "EthicsApprovals",
    "display_name": "Ethics Approvals",
    "description": "List of ethics committee approvals of the research protocols and/or\nprotocol identifiers.\n",
    "type": "array",
    "items": {
      "type": "string"
    }
  },
  "FiducialsCoordinateSystem": {
    "name": "FiducialsCoordinateSystem",
    "display_name": "Fiducials Coordinate System",
    "description": "Defines the coordinate system for the fiducials.\nPreferably the same as the `\"EEGCoordinateSystem\"`.\nSee the\n[Coordinate Systems Appendix](SPEC_ROOT/appendices/coordinate-systems.md)\nfor a list of restricted keywords for coordinate systems.\nIf `\"Other\"`, provide definition of the coordinate system in\n`\"FiducialsCoordinateSystemDescription\"`.\n",
    "anyOf": [
      {
        "$ref": "objects.enums._MEGCoordSys"
      },
      {
        "$ref": "objects.enums._EEGCoordSys"
      },
      {
        "$ref": "objects.enums._StandardTemplateCoordSys"
      },
      {
        "$ref": "objects.enums._StandardTemplateDeprecatedCoordSys"
      }
    ]
  },
  "FiducialsCoordinateSystemDescription": {
    "name": "FiducialsCoordinateSystemDescription",
    "display_name": "Fiducials Coordinate System Description",
    "description": "Free-form text description of the coordinate system.\nMay also include a link to a documentation page or paper describing the\nsystem in greater detail.\n",
    "type": "string"
  },
  "FiducialsCoordinateUnits": {
    "name": "FiducialsCoordinateUnits",
    "display_name": "Fiducials Coordinate Units",
    "description": "Units in which the coordinates that are  listed in the field\n`\"FiducialsCoordinateSystem\"` are represented.\n",
    "type": "string",
    "enum": [
      "m",
      "mm",
      "cm",
      "n/a"
    ]
  },
  "FiducialsCoordinates": {
    "name": "FiducialsCoordinates",
    "display_name": "Fiducials Coordinates",
    "description": "Key-value pairs of the labels and 3-D digitized position of anatomical\nlandmarks, interpreted following the `\"FiducialsCoordinateSystem\"`\n(for example, `{\"NAS\": [12.7,21.3,13.9], \"LPA\": [5.2,11.3,9.6],\n\"RPA\": [20.2,11.3,9.1]}`).\nEach array MUST contain three numeric values corresponding to x, y, and z\naxis of the coordinate system in that exact order.\n",
    "type": "object",
    "additionalProperties": {
      "type": "array",
      "items": {
        "type": "number"
      },
      "minItems": 3,
      "maxItems": 3
    }
  },
  "FiducialsDescription": {
    "name": "FiducialsDescription",
    "display_name": "Fiducials Description",
    "description": "Free-form text description of how the fiducials such as vitamin-E capsules\nwere placed relative to anatomical landmarks,\nand how the position of the fiducials were measured\n(for example, `\"both with Polhemus and with T1w MRI\"`).\n",
    "type": "string"
  },
  "FlipAngle": {
    "name": "FlipAngle",
    "display_name": "Flip Angle",
    "description": "Flip angle (FA) for the acquisition, specified in degrees.\nCorresponds to: DICOM Tag 0018, 1314 `Flip Angle`.\nThe data type number may apply to files from any MRI modality concerned with\na single value for this field, or to the files in a\n[file collection](SPEC_ROOT/appendices/file-collections.md)\nwhere the value of this field is iterated using the\n[`flip` entity](SPEC_ROOT/appendices/entities.md#flip).\nThe data type array provides a value for each volume in a 4D dataset and\nshould only be used when the volume timing is critical for interpretation of\nthe data, such as in\n[ASL](SPEC_ROOT/modality-specific-files/magnetic-resonance-imaging-data.md#\\\narterial-spin-labeling-perfusion-data)\nor variable flip angle fMRI sequences.\n",
    "anyOf": [
      {
        "type": "number",
        "unit": "degree",
        "exclusiveMinimum": 0,
        "maximum": 360
      },
      {
        "type": "array",
        "items": {
          "type": "number",
          "unit": "degree",
          "exclusiveMinimum": 0,
          "maximum": 360
        }
      }
    ]
  },
  "FrameDuration": {
    "name": "FrameDuration",
    "display_name": "Frame Duration",
    "description": "Time duration of each frame in default unit seconds.\nThis corresponds to DICOM Tag 0018, 1242 `Actual Frame Duration` converted\nto seconds.\n",
    "type": "array",
    "items": {
      "type": "number"
    },
    "unit": "s"
  },
  "FrameTimesStart": {
    "name": "FrameTimesStart",
    "display_name": "Frame Times Start",
    "description": "Start times for all frames relative to `\"TimeZero\"` in default unit seconds.\n",
    "type": "array",
    "items": {
      "type": "number"
    },
    "unit": "s"
  },
  "Funding": {
    "name": "Funding",
    "display_name": "Funding",
    "description": "List of sources of funding (grant numbers).\n",
    "type": "array",
    "items": {
      "type": "string"
    }
  },
  "GeneratedBy": {
    "name": "GeneratedBy",
    "display_name": "Generated By",
    "description": "Used to specify provenance of the dataset.\n",
    "type": "array",
    "minItems": 1,
    "items": {
      "type": "object",
      "required_fields": [
        "Name"
      ],
      "recommended_fields": [
        "Version"
      ],
      "properties": {
        "Name": {
          "name": "Name",
          "description": "Name of the pipeline or process that generated the outputs. Use `\"Manual\"` to\nindicate the derivatives were generated by hand, or adjusted manually after an\ninitial run of an automated pipeline.\n",
          "type": "string"
        },
        "Version": {
          "name": "Version",
          "description": "Version of the pipeline",
          "type": "string"
        },
        "Description": {
          "name": "Description",
          "description": "Plain-text description of the pipeline or process that generated the outputs.\nRECOMMENDED if `Name` is `\"Manual\"`.\n",
          "type": "string"
        },
        "CodeURL": {
          "name": "CodeURL",
          "description": "URL where the code used to generate the dataset may be found.",
          "type": "string",
          "format": "uri"
        },
        "Container": {
          "name": "Container",
          "description": "Used to specify the location and relevant attributes of software container image\nused to produce the dataset. Valid keys in this object include `Type`, `Tag` and\n[`URI`][uri] with [string][] values.\n",
          "type": "object",
          "recommended_fields": [
            "Type",
            "Tag",
            "URI"
          ],
          "properties": {
            "Type": {
              "type": "string"
            },
            "Tag": {
              "type": "string"
            },
            "URI": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      }
    }
  },
  "GeneticLevel": {
    "name": "GeneticLevel",
    "display_name": "Genetic Level",
    "description": "Describes the level of analysis.\nValues MUST be one of `\"Genetic\"`, `\"Genomic\"`, `\"Epigenomic\"`,\n`\"Transcriptomic\"`, `\"Metabolomic\"`, or `\"Proteomic\"`.\n\nFor more information on these levels, see\n[Multi-omics approaches to disease](https://genomebiology.biomedcentral.com/articles/10.1186/s13059-017-1215-1)\nby Hasin et al. 2017.\n",
    "anyOf": [
      {
        "$ref": "objects.enums._GeneticLevelEnum"
      },
      {
        "type": "array",
        "items": {
          "$ref": "objects.enums._GeneticLevelEnum"
        }
      }
    ]
  },
  "Genetics": {
    "name": "Genetics",
    "display_name": "Genetics",
    "description": "An object containing information about the genetics descriptor.\n",
    "type": "object",
    "required_fields": [
      "Dataset"
    ],
    "properties": {
      "Dataset": {
        "name": "Dataset",
        "description": "[URI](SPEC_ROOT/common-principles.md#uniform-resource-indicator)\nwhere data can be retrieved.\n",
        "type": "string",
        "format": "uri"
      },
      "Database": {
        "name": "Database",
        "description": "[URI](SPEC_ROOT/common-principles.md#uniform-resource-indicator)\nof database where the dataset is hosted.\n",
        "type": "string",
        "format": "uri"
      },
      "Descriptors": {
        "name": "Descriptors",
        "description": "List of relevant descriptors (for example, journal articles) for dataset\nusing a valid\n[URI](SPEC_ROOT/common-principles.md#uniform-resource-indicator)\nwhen possible.\n",
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "GradientSetType": {
    "name": "GradientSetType",
    "display_name": "Gradient Set Type",
    "description": "It should be possible to infer the gradient coil from the scanner model.\nIf not, for example because of a custom upgrade or use of a gradient\ninsert set, then the specifications of the actual gradient coil should be\nreported independently.\n",
    "type": "string"
  },
  "GYROChannelCount": {
    "name": "GYROChannelCount",
    "display_name": "Gyrometer Channel Count",
    "description": "Number of gyrometer channels.\n",
    "type": "integer",
    "minimum": 0
  },
  "HED": {
    "name": "HED",
    "display_name": "HED",
    "description": "Hierarchical Event Descriptor (HED) information,\nsee the [HED Appendix](SPEC_ROOT/appendices/hed.md) for details.\n",
    "anyOf": [
      {
        "type": "string"
      },
      {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      }
    ]
  },
  "HEDVersion": {
    "name": "HEDVersion",
    "display_name": "HED Version",
    "description": "If HED tags are used:\nThe version of the HED schema used to validate HED tags for study.\nMay include a single schema or a base schema and one or more library schema.\n",
    "anyOf": [
      {
        "type": "string",
        "format": "hed_version"
      },
      {
        "type": "array",
        "items": {
          "type": "string",
          "format": "hed_version"
        }
      }
    ]
  },
  "Haematocrit": {
    "name": "Haematocrit",
    "display_name": "Haematocrit",
    "description": "Measured haematocrit, meaning the volume of erythrocytes divided by the\nvolume of whole blood.\n",
    "type": "number"
  },
  "HardcopyDeviceSoftwareVersion": {
    "name": "HardcopyDeviceSoftwareVersion",
    "display_name": "Hardcopy Device Software Version",
    "description": "Manufacturer's designation of the software of the device that created this\nHardcopy Image (the printer).\nCorresponds to DICOM Tag 0018, 101A `Hardcopy Device Software Version`.\n",
    "type": "string"
  },
  "HardwareFilters": {
    "name": "HardwareFilters",
    "display_name": "Hardware Filters",
    "description": "Object of temporal hardware filters applied, or `\"n/a\"` if the data is not\navailable. Each key-value pair in the JSON object is a name of the filter and\nan object in which its parameters are defined as key-value pairs.\nFor example, `{\"Highpass RC filter\": {\"Half amplitude cutoff (Hz)\":\n0.0159, \"Roll-off\": \"6dB/Octave\"}}`.\n",
    "anyOf": [
      {
        "type": "object",
        "additionalProperties": {
          "type": "object"
        }
      },
      {
        "type": "string",
        "enum": [
          "n/a"
        ]
      }
    ]
  },
  "HeadCircumference": {
    "name": "HeadCircumference",
    "display_name": "Head Circumference",
    "description": "Circumference of the participant's head, expressed in cm (for example, `58`).\n",
    "type": "number",
    "exclusiveMinimum": 0,
    "unit": "cm"
  },
  "HeadCoilCoordinateSystem": {
    "name": "HeadCoilCoordinateSystem",
    "display_name": "Head Coil Coordinate System",
    "description": "Defines the coordinate system for the head coils.\nSee the\n[Coordinate Systems Appendix](SPEC_ROOT/appendices/coordinate-systems.md)\nfor a list of restricted keywords for coordinate systems.\nIf `\"Other\"`, provide definition of the coordinate system in\n`HeadCoilCoordinateSystemDescription`.\n",
    "anyOf": [
      {
        "$ref": "objects.enums._MEGCoordSys"
      },
      {
        "$ref": "objects.enums._EEGCoordSys"
      },
      {
        "$ref": "objects.enums._StandardTemplateCoordSys"
      },
      {
        "$ref": "objects.enums._StandardTemplateDeprecatedCoordSys"
      }
    ]
  },
  "HeadCoilCoordinateSystemDescription": {
    "name": "HeadCoilCoordinateSystemDescription",
    "display_name": "Head Coil Coordinate System Description",
    "description": "Free-form text description of the coordinate system.\nMay also include a link to a documentation page or paper describing the system in greater detail.\n",
    "type": "string"
  },
  "HeadCoilCoordinateUnits": {
    "name": "HeadCoilCoordinateUnits",
    "display_name": "Head Coil Coordinate Units",
    "description": "Units of the coordinates of `HeadCoilCoordinateSystem`.\n",
    "type": "string",
    "enum": [
      "m",
      "mm",
      "cm",
      "n/a"
    ]
  },
  "HeadCoilCoordinates": {
    "name": "HeadCoilCoordinates",
    "display_name": "Head Coil Coordinates",
    "description": "Key-value pairs describing head localization coil labels and their\ncoordinates, interpreted following the `HeadCoilCoordinateSystem`\n(for example, `{\"NAS\": [12.7,21.3,13.9], \"LPA\": [5.2,11.3,9.6],\n\"RPA\": [20.2,11.3,9.1]}`).\nNote that coils are not always placed at locations that have a known\nanatomical name (for example, for Neuromag/Elekta/MEGIN, Yokogawa systems);\nin that case generic labels can be used\n(for example, `{\"coil1\": [12.2,21.3,12.3], \"coil2\": [6.7,12.3,8.6],\n\"coil3\": [21.9,11.0,8.1]}`).\nEach array MUST contain three numeric values corresponding to x, y, and z\naxis of the coordinate system in that exact order.\n",
    "type": "object",
    "additionalProperties": {
      "type": "array",
      "items": {
        "type": "number"
      },
      "minItems": 3,
      "maxItems": 3
    }
  },
  "HeadCoilFrequency": {
    "name": "HeadCoilFrequency",
    "display_name": "Head Coil Frequency",
    "description": "List of frequencies (in Hz) used by the head localisation coils\n('HLC' in CTF systems, 'HPI' in Neuromag/Elekta/MEGIN, 'COH' in BTi/4D)\nthat track the subject's head position in the MEG helmet\n(for example, `[293, 307, 314, 321]`).\n",
    "anyOf": [
      {
        "type": "number",
        "unit": "Hz"
      },
      {
        "type": "array",
        "items": {
          "type": "number",
          "unit": "Hz"
        }
      }
    ]
  },
  "HeadStabilization": {
    "name": "HeadStabilization",
    "display_name": "Head stabilization",
    "description": "Head restraint method used during the experiment\nto prevent rotation and/or translation of the head.\nExample: \"chin-rest\", \"head-rest\", \"bite-bar\", \"chin-rest and head-rest\", \"none\"\n",
    "type": "string"
  },
  "HowToAcknowledge": {
    "name": "HowToAcknowledge",
    "display_name": "How To Acknowledge",
    "description": "Text containing instructions on how researchers using this dataset should\nacknowledge the original authors.\nThis field can also be used to define a publication that should be cited in\npublications that use the dataset.\n",
    "type": "string"
  },
  "ImageAcquisitionProtocol": {
    "name": "ImageAcquisitionProtocol",
    "display_name": "Image Acquisition Protocol",
    "description": "Description of the image acquisition protocol or\n[URI](SPEC_ROOT/common-principles.md#uniform-resource-indicator)\n(for example from [protocols.io](https://www.protocols.io/)).\n",
    "type": "string"
  },
  "ImageDecayCorrected": {
    "name": "ImageDecayCorrected",
    "display_name": "Image Decay Corrected",
    "description": "Boolean flag specifying whether the image data have been decay-corrected.\n",
    "type": "boolean"
  },
  "ImageDecayCorrectionTime": {
    "name": "ImageDecayCorrectionTime",
    "display_name": "Image Decay Correction Time",
    "description": "Point in time from which the decay correction was applied with respect to\n`\"TimeZero\"` in the default unit seconds.\n",
    "type": "number",
    "unit": "s"
  },
  "Immersion": {
    "name": "Immersion",
    "display_name": "Immersion",
    "description": "Lens immersion medium. If the file format is OME-TIFF, the value MUST be consistent\nwith the `Immersion` OME metadata field.\n",
    "type": "string"
  },
  "InfusionRadioactivity": {
    "name": "InfusionRadioactivity",
    "display_name": "Infusion Radioactivity",
    "description": "Amount of radioactivity infused into the patient.\nThis value must be less than or equal to the total injected radioactivity\n(`\"InjectedRadioactivity\"`).\nUnits should be the same as `\"InjectedRadioactivityUnits\"`.\n",
    "type": "number"
  },
  "InfusionSpeed": {
    "name": "InfusionSpeed",
    "display_name": "Infusion Speed",
    "description": "If given, infusion speed.\n",
    "type": "number"
  },
  "InfusionSpeedUnits": {
    "name": "InfusionSpeedUnits",
    "display_name": "Infusion Speed Units",
    "description": "Unit of infusion speed (for example, `\"mL/s\"`).\n",
    "type": "string",
    "format": "unit"
  },
  "InfusionStart": {
    "name": "InfusionStart",
    "display_name": "Infusion Start",
    "description": "Time of start of infusion with respect to `\"TimeZero\"` in the default unit\nseconds.\n",
    "type": "number",
    "unit": "s"
  },
  "InjectedMass": {
    "name": "InjectedMass",
    "display_name": "Injected Mass",
    "description": "Total mass of radiolabeled compound injected into subject (for example, `10`).\nThis can be derived as the ratio of the `\"InjectedRadioactivity\"` and\n`\"MolarRadioactivity\"`.\n**For those tracers in which injected mass is not available (for example FDG)\ncan be set to `\"n/a\"`)**.\n",
    "anyOf": [
      {
        "type": "number"
      },
      {
        "type": "string",
        "enum": [
          "n/a"
        ]
      }
    ]
  },
  "InjectedMassPerWeight": {
    "name": "InjectedMassPerWeight",
    "display_name": "Injected Mass Per Weight",
    "description": "Injected mass per kilogram bodyweight.\n",
    "type": "number"
  },
  "InjectedMassPerWeightUnits": {
    "name": "InjectedMassPerWeightUnits",
    "display_name": "Injected Mass Per Weight Units",
    "description": "Unit format of the injected mass per kilogram bodyweight\n(for example, `\"ug/kg\"`).\n",
    "type": "string",
    "format": "unit"
  },
  "InjectedMassUnits": {
    "name": "InjectedMassUnits",
    "display_name": "Injected Mass Units",
    "description": "Unit format of the mass of compound injected (for example, `\"ug\"` or\n`\"umol\"`).\n**Note this is not required for an FDG acquisition, since it is not available,\nand SHOULD be set to `\"n/a\"`**.\n",
    "anyOf": [
      {
        "type": "string",
        "format": "unit"
      },
      {
        "type": "string",
        "enum": [
          "n/a"
        ]
      }
    ]
  },
  "InjectedRadioactivity": {
    "name": "InjectedRadioactivity",
    "display_name": "Injected Radioactivity",
    "description": "Total amount of radioactivity injected into the patient (for example, `400`).\nFor bolus-infusion experiments, this value should be the sum of all injected\nradioactivity originating from both bolus and infusion.\nCorresponds to DICOM Tag 0018, 1074 `Radionuclide Total Dose`.\n",
    "type": "number"
  },
  "InjectedRadioactivityUnits": {
    "name": "InjectedRadioactivityUnits",
    "display_name": "Injected Radioactivity Units",
    "description": "Unit format of the specified injected radioactivity (for example, `\"MBq\"`).\n",
    "type": "string",
    "format": "unit"
  },
  "InjectedVolume": {
    "name": "InjectedVolume",
    "display_name": "Injected Volume",
    "description": "Injected volume of the radiotracer in the unit `\"mL\"`.\n",
    "type": "number",
    "unit": "mL"
  },
  "InjectionEnd": {
    "name": "InjectionEnd",
    "display_name": "Injection End",
    "description": "Time of end of injection with respect to `\"TimeZero\"` in the default unit\nseconds.\n",
    "type": "number",
    "unit": "s"
  },
  "InjectionStart": {
    "name": "InjectionStart",
    "display_name": "Injection Start",
    "description": "Time of start of injection with respect to `\"TimeZero\"` in the default unit\nseconds.\nThis corresponds to DICOM Tag 0018, 1072 `Contrast/Bolus Start Time`\nconverted to seconds relative to `\"TimeZero\"`.\n",
    "type": "number",
    "unit": "s"
  },
  "InstitutionAddress": {
    "name": "InstitutionAddress",
    "display_name": "Institution Address",
    "description": "The address of the institution in charge of the equipment that produced the\nmeasurements.\n",
    "type": "string"
  },
  "InstitutionName": {
    "name": "InstitutionName",
    "display_name": "Institution Name",
    "description": "The name of the institution in charge of the equipment that produced the\nmeasurements.\n",
    "type": "string"
  },
  "InstitutionalDepartmentName": {
    "name": "InstitutionalDepartmentName",
    "display_name": "Institutional Department Name",
    "description": "The department in the institution in charge of the equipment that produced\nthe measurements.\n",
    "type": "string"
  },
  "Instructions": {
    "name": "Instructions",
    "display_name": "Instructions",
    "description": "Text of the instructions given to participants before the recording.\n",
    "type": "string"
  },
  "IntendedFor": {
    "name": "IntendedFor",
    "display_name": "Intended For",
    "description": "The paths to files for which the associated file is intended to be used.\nContains one or more [BIDS URIs](SPEC_ROOT/common-principles.md#bids-uri).\nUsing forward-slash separated paths relative to the participant subdirectory is\n[DEPRECATED](SPEC_ROOT/common-principles.md#definitions).\n",
    "anyOf": [
      {
        "type": "string",
        "format": "bids_uri"
      },
      {
        "type": "string",
        "format": "participant_relative"
      },
      {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "string",
              "format": "bids_uri"
            },
            {
              "type": "string",
              "format": "participant_relative"
            }
          ]
        }
      }
    ]
  },
  "IntendedFor__ds_relative": {
    "name": "IntendedFor",
    "display_name": "Intended For",
    "description": "The paths to files for which the associated file is intended to be used.\nContains one or more [BIDS URIs](SPEC_ROOT/common-principles.md#bids-uri).\nUsing forward-slash separated paths relative to the dataset root is\n[DEPRECATED](SPEC_ROOT/common-principles.md#definitions).\n",
    "anyOf": [
      {
        "type": "string",
        "format": "bids_uri"
      },
      {
        "type": "string",
        "format": "dataset_relative"
      },
      {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "type": "string",
              "format": "bids_uri"
            },
            {
              "type": "string",
              "format": "dataset_relative"
            }
          ]
        }
      }
    ]
  },
  "InversionTime": {
    "name": "InversionTime",
    "display_name": "Inversion Time",
    "description": "The inversion time (TI) for the acquisition, specified in seconds.\nInversion time is the time after the middle of inverting RF pulse to middle\nof excitation pulse to detect the amount of longitudinal magnetization.\nCorresponds to DICOM Tag 0018, 0082 `Inversion Time`\n(please note that the DICOM term is in milliseconds not seconds).\n",
    "type": "number",
    "unit": "s",
    "exclusiveMinimum": 0
  },
  "JNTANGChannelCount": {
    "name": "JNTANGChannelCount",
    "display_name": "Joint angle channel count",
    "description": "Number of joint angle channels.\n",
    "type": "integer",
    "minimum": 0
  },
  "LabelingDistance": {
    "name": "LabelingDistance",
    "display_name": "Labeling Distance",
    "description": "Distance from the center of the imaging slab to the center of the labeling\nplane (`(P)CASL`) or the leading edge of the labeling slab (`PASL`),\nin millimeters.\nIf the labeling is performed inferior to the isocenter,\nthis number should be negative.\nBased on DICOM macro C.8.13.5.14.\n",
    "type": "number",
    "unit": "mm"
  },
  "LabelingDuration": {
    "name": "LabelingDuration",
    "display_name": "Labeling Duration",
    "description": "Total duration of the labeling pulse train, in seconds,\ncorresponding to the temporal width of the labeling bolus for\n`\"PCASL\"` or `\"CASL\"`.\nIn case all control-label volumes (or deltam or CBF) have the same\n`LabelingDuration`, a scalar must be specified.\nIn case the control-label volumes (or deltam or cbf) have a different\n`\"LabelingDuration\"`, an array of numbers must be specified,\nfor which any `m0scan` in the timeseries has a `\"LabelingDuration\"` of zero.\nIn case an array of numbers is provided,\nits length should be equal to the number of volumes specified in\n`*_aslcontext.tsv`.\nCorresponds to DICOM Tag 0018, 9258 `ASL Pulse Train Duration`.\n",
    "anyOf": [
      {
        "type": "number",
        "minimum": 0,
        "unit": "s"
      },
      {
        "type": "array",
        "items": {
          "type": "number",
          "unit": "s",
          "minimum": 0
        }
      }
    ]
  },
  "LabelingEfficiency": {
    "name": "LabelingEfficiency",
    "display_name": "Labeling Efficiency",
    "description": "Labeling efficiency, specified as a number between zero and one,\nonly if obtained externally (for example phase-contrast based).\n",
    "type": "number",
    "exclusiveMinimum": 0
  },
  "LabelingLocationDescription": {
    "name": "LabelingLocationDescription",
    "display_name": "Labeling Location Description",
    "description": "Description of the location of the labeling plane (`\"CASL\"` or `\"PCASL\"`) or\nthe labeling slab (`\"PASL\"`) that cannot be captured by fields\n`LabelingOrientation` or `LabelingDistance`.\nMay include a link to an anonymized screenshot of the planning of the\nlabeling slab/plane with respect to the imaging slab or slices\n`*_asllabeling.*`.\nBased on DICOM macro C.8.13.5.14.\n",
    "type": "string"
  },
  "LabelingOrientation": {
    "name": "LabelingOrientation",
    "display_name": "Labeling Orientation",
    "description": "Orientation of the labeling plane (`(P)CASL`) or slab (`PASL`).\nThe direction cosines of a normal vector perpendicular to the ASL labeling\nslab or plane with respect to the patient.\nCorresponds to DICOM Tag 0018, 9255 `ASL Slab Orientation`.\n",
    "type": "array",
    "items": {
      "type": "number"
    }
  },
  "LabelingPulseAverageB1": {
    "name": "LabelingPulseAverageB1",
    "display_name": "Labeling Pulse Average B1",
    "description": "The average B1-field strength of the RF labeling pulses, in microteslas.\nAs an alternative, `\"LabelingPulseFlipAngle\"` can be provided.\n",
    "type": "number",
    "exclusiveMinimum": 0,
    "unit": "uT"
  },
  "LabelingPulseAverageGradient": {
    "name": "LabelingPulseAverageGradient",
    "display_name": "Labeling Pulse Average Gradient",
    "description": "The average labeling gradient, in milliteslas per meter.\n",
    "type": "number",
    "exclusiveMinimum": 0,
    "unit": "mT/m"
  },
  "LabelingPulseDuration": {
    "name": "LabelingPulseDuration",
    "display_name": "Labeling Pulse Duration",
    "description": "Duration of the individual labeling pulses, in milliseconds.\n",
    "type": "number",
    "exclusiveMinimum": 0,
    "unit": "ms"
  },
  "LabelingPulseFlipAngle": {
    "name": "LabelingPulseFlipAngle",
    "display_name": "Labeling Pulse Flip Angle",
    "description": "The flip angle of a single labeling pulse, in degrees,\nwhich can be given as an alternative to `\"LabelingPulseAverageB1\"`.\n",
    "type": "number",
    "exclusiveMinimum": 0,
    "maximum": 360,
    "unit": "degree"
  },
  "LabelingPulseInterval": {
    "name": "LabelingPulseInterval",
    "display_name": "Labeling Pulse Interval",
    "description": "Delay between the peaks of the individual labeling pulses, in milliseconds.\n",
    "type": "number",
    "exclusiveMinimum": 0,
    "unit": "ms"
  },
  "LabelingPulseMaximumGradient": {
    "name": "LabelingPulseMaximumGradient",
    "display_name": "Labeling Pulse Maximum Gradient",
    "description": "The maximum amplitude of the gradient switched on during the application of\nthe labeling RF pulse(s), in milliteslas per meter.\n",
    "type": "number",
    "exclusiveMinimum": 0,
    "unit": "mT/m"
  },
  "LabelingSlabThickness": {
    "name": "LabelingSlabThickness",
    "display_name": "Labeling Slab Thickness",
    "description": "Thickness of the labeling slab in millimeters.\nFor non-selective FAIR a zero is entered.\nCorresponds to DICOM Tag 0018, 9254 `ASL Slab Thickness`.\n",
    "type": "number",
    "exclusiveMinimum": 0,
    "unit": "mm"
  },
  "LATENCYChannelCount": {
    "name": "LATENCYChannelCount",
    "display_name": "Latency channel count",
    "description": "Number of Latency channels.\n",
    "type": "integer",
    "minimum": 0
  },
  "Levels": {
    "name": "Levels",
    "display_name": "Levels",
    "description": "For categorical variables: An object of possible values (keys) and their\ndescriptions (values).\n",
    "type": "object",
    "additionalProperties": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "TermURL": {
              "type": "string",
              "format": "uri"
            },
            "Description": {
              "type": "string"
            }
          }
        }
      ]
    }
  },
  "License": {
    "name": "License",
    "display_name": "License",
    "description": "The license for the dataset.\nThe use of license name abbreviations is RECOMMENDED for specifying a license\n(see [Licenses](SPEC_ROOT/appendices/licenses.md)).\nThe corresponding full license text MAY be specified in an additional\n`LICENSE` file.\n",
    "type": "string"
  },
  "LongName": {
    "name": "LongName",
    "display_name": "Long Name",
    "description": "Long (unabbreviated) name of the column.\n",
    "type": "string"
  },
  "LookLocker": {
    "name": "LookLocker",
    "display_name": "Look Locker",
    "description": "Boolean indicating if a Look-Locker readout is used.\n",
    "type": "boolean"
  },
  "M0Estimate": {
    "name": "M0Estimate",
    "display_name": "M0Estimate",
    "description": "A single numerical whole-brain M0 value (referring to the M0 of blood),\nonly if obtained externally\n(for example retrieved from CSF in a separate measurement).\n",
    "type": "number",
    "exclusiveMinimum": 0
  },
  "M0Type": {
    "name": "M0Type",
    "display_name": "M0Type",
    "description": "Describes the presence of M0 information.\n`\"Separate\"` means that a separate `*_m0scan.nii[.gz]` is present.\n`\"Included\"` means that an m0scan volume is contained within the current\n`*_asl.nii[.gz]`.\n`\"Estimate\"` means that a single whole-brain M0 value is provided.\n`\"Absent\"` means that no specific M0 information is present.\n",
    "type": "string",
    "enum": [
      {
        "$ref": "objects.enums.Separate.value"
      },
      {
        "$ref": "objects.enums.Included.value"
      },
      {
        "$ref": "objects.enums.Estimate.value"
      },
      {
        "$ref": "objects.enums.Absent.value"
      }
    ]
  },
  "MAGNChannelCount": {
    "name": "MAGNChannelCount",
    "display_name": "Magnetometer Channel Count",
    "description": "Number of magnetometer channels.\n",
    "type": "integer",
    "minimum": 0
  },
  "MEGChannelCount": {
    "name": "MEGChannelCount",
    "display_name": "MEG Channel Count",
    "description": "Number of MEG channels (for example, `275`).\n",
    "type": "integer",
    "minimum": 0
  },
  "MEGCoordinateSystem": {
    "name": "MEGCoordinateSystem",
    "display_name": "MEG Coordinate System",
    "description": "Defines the coordinate system for the MEG sensors.\nSee the\n[Coordinate Systems Appendix](SPEC_ROOT/appendices/coordinate-systems.md)\nfor a list of restricted keywords for coordinate systems.\nIf `\"Other\"`, provide definition of the coordinate system in\n`\"MEGCoordinateSystemDescription\"`.\n",
    "anyOf": [
      {
        "$ref": "objects.enums._MEGCoordSys"
      },
      {
        "$ref": "objects.enums._EEGCoordSys"
      },
      {
        "$ref": "objects.enums._StandardTemplateCoordSys"
      },
      {
        "$ref": "objects.enums._StandardTemplateDeprecatedCoordSys"
      }
    ]
  },
  "MEGCoordinateSystemDescription": {
    "name": "MEGCoordinateSystemDescription",
    "display_name": "MEG Coordinate System Description",
    "description": "Free-form text description of the coordinate system.\nMay also include a link to a documentation page or paper describing the\nsystem in greater detail.\n",
    "type": "string"
  },
  "MEGCoordinateUnits": {
    "name": "MEGCoordinateUnits",
    "display_name": "MEG Coordinate Units",
    "description": "Units of the coordinates of `\"MEGCoordinateSystem\"`.\n",
    "type": "string",
    "enum": [
      "m",
      "mm",
      "cm",
      "n/a"
    ]
  },
  "MEGREFChannelCount": {
    "name": "MEGREFChannelCount",
    "display_name": "MEGREF Channel Count",
    "description": "Number of MEG reference channels (for example, `23`).\nFor systems without such channels (for example, Neuromag Vectorview),\n`MEGREFChannelCount` should be set to `0`.\n",
    "type": "integer",
    "minimum": 0
  },
  "MISCChannelCount": {
    "name": "MISCChannelCount",
    "display_name": "Miscellaneous channel count",
    "description": "Number of miscellaneous channels not covered otherwise.\n",
    "type": "integer",
    "minimum": 0
  },
  "MotionChannelCount": {
    "name": "MotionChannelCount",
    "display_name": "Motion Channel Count",
    "description": "Number of motion channels (for example, `275`).\n",
    "type": "integer",
    "minimum": 0
  },
  "MRAcquisitionType": {
    "name": "MRAcquisitionType",
    "display_name": "MR Acquisition Type",
    "description": "Type of sequence readout.\nCorresponds to DICOM Tag 0018, 0023 `MR Acquisition Type`.\n",
    "type": "string",
    "enum": [
      {
        "$ref": "objects.enums.TwoD.value"
      },
      {
        "$ref": "objects.enums.ThreeD.value"
      }
    ]
  },
  "MRTransmitCoilSequence": {
    "name": "MRTransmitCoilSequence",
    "display_name": "MR Transmit Coil Sequence",
    "description": "This is a relevant field if a non-standard transmit coil is used.\nCorresponds to DICOM Tag 0018, 9049 `MR Transmit Coil Sequence`.\n",
    "type": "string"
  },
  "MTNumberOfPulses": {
    "name": "MTNumberOfPulses",
    "display_name": "MT Number Of Pulses",
    "description": "The number of magnetization transfer RF pulses applied before the readout.\n",
    "type": "number"
  },
  "MTOffsetFrequency": {
    "name": "MTOffsetFrequency",
    "display_name": "MT Offset Frequency",
    "description": "The frequency offset of the magnetization transfer pulse with respect to the\ncentral H1 Larmor frequency in Hertz (Hz).\n",
    "type": "number",
    "unit": "Hz"
  },
  "MTPulseBandwidth": {
    "name": "MTPulseBandwidth",
    "display_name": "MT Pulse Bandwidth",
    "description": "The excitation bandwidth of the magnetization transfer pulse in Hertz (Hz).\n",
    "type": "number",
    "unit": "Hz"
  },
  "MTPulseDuration": {
    "name": "MTPulseDuration",
    "display_name": "MT Pulse Duration",
    "description": "Duration of the magnetization transfer RF pulse in seconds.\n",
    "type": "number",
    "unit": "s"
  },
  "MTPulseShape": {
    "name": "MTPulseShape",
    "display_name": "MT Pulse Shape",
    "description": "Shape of the magnetization transfer RF pulse waveform.\nThe value `\"GAUSSHANN\"` refers to a Gaussian pulse with a Hanning window.\nThe value `\"SINCHANN\"` refers to a sinc pulse with a Hanning window.\nThe value `\"SINCGAUSS\"` refers to a sinc pulse with a Gaussian window.\n",
    "type": "string",
    "enum": [
      {
        "$ref": "objects.enums.HARD.value"
      },
      {
        "$ref": "objects.enums.GAUSSIAN.value"
      },
      {
        "$ref": "objects.enums.GAUSSHANN.value"
      },
      {
        "$ref": "objects.enums.SINC.value"
      },
      {
        "$ref": "objects.enums.SINCHANN.value"
      },
      {
        "$ref": "objects.enums.SINCGAUSS.value"
      },
      {
        "$ref": "objects.enums.FERMI.value"
      }
    ]
  },
  "MTState": {
    "name": "MTState",
    "display_name": "MT State",
    "description": "Boolean stating whether the magnetization transfer pulse is applied.\nCorresponds to DICOM Tag 0018, 9020 `Magnetization Transfer`.\n",
    "type": "boolean"
  },
  "MagneticFieldStrength": {
    "name": "MagneticFieldStrength",
    "display_name": "Magnetic Field Strength",
    "description": "Nominal field strength of MR magnet in Tesla.\nCorresponds to DICOM Tag 0018, 0087 `Magnetic Field Strength`.\n",
    "type": "number"
  },
  "Magnification": {
    "name": "Magnification",
    "display_name": "Magnification",
    "description": "Lens magnification (for example: `40`). If the file format is OME-TIFF,\nthe value MUST be consistent with the `\"NominalMagnification\"` OME metadata field.\n",
    "type": "number",
    "exclusiveMinimum": 0
  },
  "Manual": {
    "name": "Manual",
    "display_name": "Manual",
    "description": "Indicates if the segmentation was performed manually or via an automated\nprocess.\n",
    "type": "boolean"
  },
  "Manufacturer": {
    "name": "Manufacturer",
    "display_name": "Manufacturer",
    "description": "Manufacturer of the equipment that produced the measurements.\n",
    "type": "string"
  },
  "ManufacturersModelName": {
    "name": "ManufacturersModelName",
    "display_name": "Manufacturers Model Name",
    "description": "Manufacturer's model name of the equipment that produced the measurements.\n",
    "type": "string"
  },
  "MatrixCoilMode": {
    "name": "MatrixCoilMode",
    "display_name": "Matrix Coil Mode",
    "description": "(If used)\nA method for reducing the number of independent channels by combining in\nanalog the signals from multiple coil elements.\nThere are typically different default modes when using un-accelerated or\naccelerated (for example, `\"GRAPPA\"`, `\"SENSE\"`) imaging.\n",
    "type": "string"
  },
  "MaxMovement": {
    "name": "MaxMovement",
    "display_name": "Max Movement",
    "description": "Maximum head movement (in mm) detected during the recording,\nas measured by the head localisation coils (for example, `4.8`).\n",
    "type": "number",
    "unit": "mm"
  },
  "MeasurementToolMetadata": {
    "name": "MeasurementToolMetadata",
    "display_name": "Measurement Tool Metadata",
    "description": "A description of the measurement tool as a whole.\nContains two fields: `\"Description\"` and `\"TermURL\"`.\n`\"Description\"` is a free text description of the measurement tool.\n`\"TermURL\"` is a URL to an entity in an ontology corresponding to this tool.\n",
    "type": "object",
    "properties": {
      "TermURL": {
        "type": "string",
        "format": "uri"
      },
      "Description": {
        "type": "string"
      }
    }
  },
  "MetaboliteAvail": {
    "name": "MetaboliteAvail",
    "display_name": "Metabolite Available",
    "description": "Boolean that specifies if metabolite measurements are available.\nIf `true`, the `metabolite_parent_fraction` column MUST be present in the\ncorresponding `*_blood.tsv` file.\n",
    "type": "boolean"
  },
  "MetaboliteMethod": {
    "name": "MetaboliteMethod",
    "display_name": "Metabolite Method",
    "description": "Method used to measure metabolites.\n",
    "type": "string"
  },
  "MetaboliteRecoveryCorrectionApplied": {
    "name": "MetaboliteRecoveryCorrectionApplied",
    "display_name": "Metabolite Recovery Correction Applied",
    "description": "Metabolite recovery correction from the HPLC, for tracers where it changes\nwith time postinjection.\nIf `true`, the `hplc_recovery_fractions` column MUST be present in the\ncorresponding `*_blood.tsv` file.\n",
    "type": "boolean"
  },
  "MiscChannelCount": {
    "name": "MiscChannelCount",
    "display_name": "Misc Channel Count",
    "description": "Number of miscellaneous analog channels for auxiliary signals.\n",
    "type": "integer",
    "minimum": 0
  },
  "MissingValues": {
    "name": "MissingValues",
    "display_name": "MissingValues",
    "description": "Describes how missing values are represented in the given recording system\n(for example a tracking system in motion), can take values such as, \"NaN\", \"0\".\n",
    "type": "string"
  },
  "MixingTime": {
    "name": "MixingTime",
    "display_name": "Mixing Time",
    "description": "In the context of a stimulated- and spin-echo 3D EPI sequence for B1+ mapping,\ncorresponds to the interval between spin- and stimulated-echo pulses.\nIn the context of a diffusion-weighted double spin-echo sequence,\ncorresponds to the interval between two successive diffusion sensitizing\ngradients, specified in seconds.\n",
    "type": "number",
    "unit": "s"
  },
  "ModeOfAdministration": {
    "name": "ModeOfAdministration",
    "display_name": "Mode Of Administration",
    "description": "Mode of administration of the injection\n(for example, `\"bolus\"`, `\"infusion\"`, or `\"bolus-infusion\"`).\n",
    "type": "string"
  },
  "MolarActivity": {
    "name": "MolarActivity",
    "display_name": "Molar Activity",
    "description": "Molar activity of compound injected.\nCorresponds to DICOM Tag 0018, 1077 `Radiopharmaceutical Specific Activity`.\n",
    "type": "number"
  },
  "MolarActivityMeasTime": {
    "name": "MolarActivityMeasTime",
    "display_name": "Molar Activity Measurement Time",
    "description": "Time to which molar radioactivity measurement above applies in the default\nunit `\"hh:mm:ss\"`.\n",
    "type": "string",
    "format": "time"
  },
  "MolarActivityUnits": {
    "name": "MolarActivityUnits",
    "display_name": "Molar Activity Units",
    "description": "Unit of the specified molar radioactivity (for example, `\"GBq/umol\"`).\n",
    "type": "string",
    "format": "unit"
  },
  "MultibandAccelerationFactor": {
    "name": "MultibandAccelerationFactor",
    "display_name": "Multiband Acceleration Factor",
    "description": "The multiband factor, for multiband acquisitions.\n",
    "type": "number"
  },
  "MultipartID": {
    "name": "MultipartID",
    "display_name": "MultipartID",
    "description": "A unique (per participant) label tagging DWI runs that are part of a\nmultipart scan.\n",
    "type": "string"
  },
  "Name": {
    "name": "Name",
    "display_name": "Name",
    "description": "Name of the dataset.\n",
    "type": "string"
  },
  "NegativeContrast": {
    "name": "NegativeContrast",
    "display_name": "Negative Contrast",
    "description": "`true` or `false` value specifying whether increasing voxel intensity\n(within sample voxels) denotes a decreased value with respect to the\ncontrast suffix.\nThis is commonly the case when Cerebral Blood Volume is estimated via\nusage of a contrast agent in conjunction with a T2\\* weighted acquisition\nprotocol.\n",
    "type": "boolean"
  },
  "NIRSChannelCount": {
    "name": "NIRSChannelCount",
    "display_name": "NIRS Channel Count",
    "description": "Total number of NIRS channels, including short channels.\nCorresponds to the number of rows in `channels.tsv` with any NIRS type.\n",
    "type": "integer",
    "minimum": 0
  },
  "NIRSSourceOptodeCount": {
    "name": "NIRSSourceOptodeCount",
    "display_name": "NIRS Source Optode Count",
    "description": "Number of NIRS sources.\nCorresponds to the number of rows in `optodes.tsv` with type `\"source\"`.\n",
    "type": "integer",
    "minimum": 1
  },
  "NIRSDetectorOptodeCount": {
    "name": "NIRSDetectorOptodeCount",
    "display_name": "NIRS Detector Optode Channel Count",
    "description": "Number of NIRS detectors.\nCorresponds to the number of rows in `optodes.tsv` with type `\"detector\"`.\n",
    "type": "integer",
    "minimum": 1
  },
  "NIRSPlacementScheme": {
    "name": "NIRSPlacementScheme",
    "display_name": "NIRS Placement Scheme",
    "description": "Placement scheme of NIRS optodes.\nEither the name of a standardized placement system (for example, `\"10-20\"`)\nor an array of standardized position names (for example, `[\"Cz\", \"Pz\"]`).\nThis field should only be used if a cap was not used.\nIf a standard cap was used, then it should be specified in `CapManufacturer`\nand `CapManufacturersModelName` and this field should be set to `\"n/a\"`\n",
    "anyOf": [
      {
        "type": "string"
      },
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    ]
  },
  "NIRSCoordinateSystem": {
    "name": "NIRSCoordinateSystem",
    "display_name": "NIRS Coordinate System",
    "description": "Defines the coordinate system in which the optode positions are expressed.\n\nSee\n[Appendix VIII](SPEC_ROOT/appendices/coordinate-systems.md)\nfor a list of restricted keywords for coordinate systems.\nIf `\"Other\"`, a definition of the coordinate system MUST be\nprovided in `NIRSCoordinateSystemDescription`.\n",
    "anyOf": [
      {
        "$ref": "objects.enums._MEGCoordSys"
      },
      {
        "$ref": "objects.enums._EEGCoordSys"
      },
      {
        "$ref": "objects.enums._StandardTemplateCoordSys"
      },
      {
        "$ref": "objects.enums._StandardTemplateDeprecatedCoordSys"
      }
    ]
  },
  "NIRSCoordinateSystemDescription": {
    "name": "NIRSCoordinateSystemDescription",
    "display_name": "NIRS Coordinate System Description",
    "description": "Free-form text description of the coordinate system.\nMay also include a link to a documentation page or paper describing the\nsystem in greater detail.\n",
    "type": "string"
  },
  "NIRSCoordinateUnits": {
    "name": "NIRSCoordinateUnits",
    "display_name": "NIRS Coordinate Units",
    "description": "Units of the coordinates of `NIRSCoordinateSystem`.\n",
    "type": "string",
    "enum": [
      "m",
      "mm",
      "cm",
      "n/a"
    ]
  },
  "NIRSCoordinateProcessingDescription": {
    "name": "NIRSCoordinateProcessingDescription",
    "display_name": "NIRS Coordinate Processing Description",
    "description": "Has any post-processing (such as projection) been done on the optode\npositions (for example, `\"surface_projection\"`, `\"n/a\"`).\n",
    "type": "string"
  },
  "NonlinearGradientCorrection": {
    "name": "NonlinearGradientCorrection",
    "display_name": "Nonlinear Gradient Correction",
    "description": "Boolean stating if the image saved has been corrected for gradient\nnonlinearities by the scanner sequence.\n",
    "type": "boolean"
  },
  "NumberOfVolumesDiscardedByScanner": {
    "name": "NumberOfVolumesDiscardedByScanner",
    "display_name": "Number Of Volumes Discarded By Scanner",
    "description": "Number of volumes (\"dummy scans\") discarded by the scanner\n(as opposed to those discarded by the user post hoc)\nbefore saving the imaging file.\nFor example, a sequence that automatically discards the first 4 volumes\nbefore saving would have this field as 4.\nA sequence that does not discard dummy scans would have this set to 0.\nPlease note that the onsets recorded in the `events.tsv` file should always\nrefer to the beginning of the acquisition of the first volume in the\ncorresponding imaging file - independent of the value of\n`\"NumberOfVolumesDiscardedByScanner\"` field.\n",
    "type": "integer",
    "minimum": 0
  },
  "NumberOfVolumesDiscardedByUser": {
    "name": "NumberOfVolumesDiscardedByUser",
    "display_name": "Number Of Volumes Discarded By User",
    "description": "Number of volumes (\"dummy scans\") discarded by the user before including the\nfile in the dataset.\nIf possible, including all of the volumes is strongly recommended.\nPlease note that the onsets recorded in the `events.tsv` file should always\nrefer to the beginning of the acquisition of the first volume in the\ncorresponding imaging file - independent of the value of\n`\"NumberOfVolumesDiscardedByUser\"` field.\n",
    "type": "integer",
    "minimum": 0
  },
  "NumberShots": {
    "name": "NumberShots",
    "display_name": "Number Shots",
    "description": "The number of RF excitations needed to reconstruct a slice or volume\n(may be referred to as partition).\nPlease mind that this is not the same as Echo Train Length which denotes the\nnumber of k-space lines collected after excitation in a multi-echo readout.\nThe data type array is applicable for specifying this parameter before and\nafter the k-space center is sampled.\nPlease see\n[`\"NumberShots\"` metadata field]\\\n(SPEC_ROOT/appendices/qmri.md#numbershots-metadata-field)\nin the qMRI appendix for corresponding calculations.\n",
    "anyOf": [
      {
        "type": "number"
      },
      {
        "type": "array",
        "items": {
          "type": "number"
        }
      }
    ]
  },
  "NumericalAperture": {
    "name": "NumericalAperture",
    "display_name": "Numerical Aperture",
    "description": "Lens numerical aperture (for example: `1.4`). If the file format is OME-TIFF,\nthe value MUST be consistent with the `LensNA` OME metadata field.\n",
    "type": "number",
    "exclusiveMinimum": 0
  },
  "OperatingSystem": {
    "name": "OperatingSystem",
    "display_name": "Operating System",
    "description": "Operating system used to run the stimuli presentation software\n(for formatting recommendations, see examples below this table).\n",
    "type": "string"
  },
  "ORNTChannelCount": {
    "name": "ORNTChannelCount",
    "display_name": "Orientation Channel Count",
    "description": "Number of orientation channels.\n",
    "type": "integer",
    "minimum": 0
  },
  "OtherAcquisitionParameters": {
    "name": "OtherAcquisitionParameters",
    "display_name": "Other Acquisition Parameters",
    "description": "Description of other relevant image acquisition parameters.\n",
    "type": "string"
  },
  "PASLType": {
    "name": "PASLType",
    "display_name": "PASL Type",
    "description": "Type of the labeling pulse of the `PASL` labeling,\nfor example `\"FAIR\"`, `\"EPISTAR\"`, or `\"PICORE\"`.\n",
    "type": "string"
  },
  "PCASLType": {
    "name": "PCASLType",
    "display_name": "PCASL Type",
    "description": "The type of gradient pulses used in the `control` condition.\n",
    "type": "string",
    "enum": [
      {
        "$ref": "objects.enums.balanced.value"
      },
      {
        "$ref": "objects.enums.unbalanced.value"
      }
    ]
  },
  "ParallelAcquisitionTechnique": {
    "name": "ParallelAcquisitionTechnique",
    "display_name": "Parallel Acquisition Technique",
    "description": "The type of parallel imaging used (for example `\"GRAPPA\"`, `\"SENSE\"`).\nCorresponds to DICOM Tag 0018, 9078 `Parallel Acquisition Technique`.\n",
    "type": "string"
  },
  "ParallelReductionFactorInPlane": {
    "name": "ParallelReductionFactorInPlane",
    "display_name": "Parallel Reduction Factor In Plane",
    "description": "The parallel imaging (for instance, GRAPPA) factor in plane.\nUse the denominator of the fraction of k-space encoded for each slice.\nFor example, 2 means half of k-space is encoded.\nCorresponds to DICOM Tag 0018, 9069 `Parallel Reduction Factor In-plane`.\n",
    "type": "number"
  },
  "ParallelReductionFactorOutOfPlane": {
    "name": "ParallelReductionFactorOutOfPlane",
    "display_name": "Parallel Reduction Factor Out of Plane",
    "description": "The parallel imaging (for instance, GRAPPA) factor in the second phase encoding dimension of 3D sequences.\nUse the denominator of the fraction of k-space encoded in the second phase encoding dimension.\nFor example, 2 means half of k-space is encoded.\nWill typically be 1 for 2D sequences, as each slice in a 2D acquisition is usually fully encoded.\n`ParallelReductionFactorOutOfPlane` should not be confused with `MultibandAccelerationFactor`,\nas they imply different methods of accelerating the acquisition.\nCorresponds to DICOM Tag 0018, 9155 `Parallel Reduction Factor out-of-plane`.\n",
    "type": "number"
  },
  "PartialFourier": {
    "name": "PartialFourier",
    "display_name": "Partial Fourier",
    "description": "The fraction of partial Fourier information collected.\nCorresponds to DICOM Tag 0018, 9081 `Partial Fourier`.\n",
    "type": "number"
  },
  "PartialFourierDirection": {
    "name": "PartialFourierDirection",
    "display_name": "Partial Fourier Direction",
    "description": "The direction where only partial Fourier information was collected.\nCorresponds to DICOM Tag 0018, 9036 `Partial Fourier Direction`.\n",
    "type": "string"
  },
  "PharmaceuticalDoseAmount": {
    "name": "PharmaceuticalDoseAmount",
    "display_name": "Pharmaceutical Dose Amount",
    "description": "Dose amount of pharmaceutical coadministered with tracer.\n",
    "anyOf": [
      {
        "type": "number"
      },
      {
        "type": "array",
        "items": {
          "type": "number"
        }
      }
    ]
  },
  "PharmaceuticalDoseRegimen": {
    "name": "PharmaceuticalDoseRegimen",
    "display_name": "Pharmaceutical Dose Regimen",
    "description": "Details of the pharmaceutical dose regimen.\nEither adequate description or short-code relating to regimen documented\nelsewhere (for example, `\"single oral bolus\"`).\n",
    "type": "string"
  },
  "PharmaceuticalDoseTime": {
    "name": "PharmaceuticalDoseTime",
    "display_name": "Pharmaceutical Dose Time",
    "description": "Time of administration of pharmaceutical dose, relative to time zero.\nFor an infusion, this should be a vector with two elements specifying the\nstart and end of the infusion period. For more complex dose regimens,\nthe regimen description should be complete enough to enable unambiguous\ninterpretation of `\"PharmaceuticalDoseTime\"`.\nUnit format of the specified pharmaceutical dose time MUST be seconds.\n",
    "anyOf": [
      {
        "type": "number",
        "unit": "s"
      },
      {
        "type": "array",
        "items": {
          "type": "number",
          "unit": "s"
        }
      }
    ]
  },
  "PharmaceuticalDoseUnits": {
    "name": "PharmaceuticalDoseUnits",
    "display_name": "Pharmaceutical Dose Units",
    "description": "Unit format relating to pharmaceutical dose\n(for example, `\"mg\"` or `\"mg/kg\"`).\n",
    "type": "string",
    "format": "unit"
  },
  "PharmaceuticalName": {
    "name": "PharmaceuticalName",
    "display_name": "Pharmaceutical Name",
    "description": "Name of pharmaceutical coadministered with tracer.\n",
    "type": "string"
  },
  "PhaseEncodingDirection": {
    "name": "PhaseEncodingDirection",
    "display_name": "Phase Encoding Direction",
    "description": "The letters `i`, `j`, `k` correspond to the first, second and third axis of\nthe data in the NIFTI file.\nThe polarity of the phase encoding is assumed to go from zero index to\nmaximum index unless `-` sign is present\n(then the order is reversed - starting from the highest index instead of\nzero).\n`PhaseEncodingDirection` is defined as the direction along which phase is was\nmodulated which may result in visible distortions.\nNote that this is not the same as the DICOM term\n`InPlanePhaseEncodingDirection` which can have `ROW` or `COL` values.\n",
    "type": "string",
    "enum": [
      {
        "$ref": "objects.enums.i.value"
      },
      {
        "$ref": "objects.enums.iMinus.value"
      },
      {
        "$ref": "objects.enums.j.value"
      },
      {
        "$ref": "objects.enums.jMinus.value"
      },
      {
        "$ref": "objects.enums.k.value"
      },
      {
        "$ref": "objects.enums.kMinus.value"
      }
    ]
  },
  "PhotoDescription": {
    "name": "PhotoDescription",
    "display_name": "Photo Description",
    "description": "Description of the photo.\n",
    "type": "string"
  },
  "PixelSize": {
    "name": "PixelSize",
    "display_name": "Pixel Size",
    "description": "A 2- or 3-number array of the physical size of a pixel, either `[PixelSizeX, PixelSizeY]`\nor `[PixelSizeX, PixelSizeY, PixelSizeZ]`, where X is the width, Y the height and Z the\ndepth.\nIf the file format is OME-TIFF, these values need to be consistent with `PhysicalSizeX`,\n`PhysicalSizeY` and `PhysicalSizeZ` OME metadata fields, after converting in\n`PixelSizeUnits` according to `PhysicalSizeXunit`, `PhysicalSizeYunit` and\n`PhysicalSizeZunit` OME fields.\n",
    "type": "array",
    "minItems": 2,
    "maxItems": 3,
    "items": {
      "type": "number",
      "minimum": 0
    }
  },
  "PixelSizeUnits": {
    "name": "PixelSizeUnits",
    "display_name": "Pixel Size Units",
    "description": "Unit format of the specified `\"PixelSize\"`. MUST be one of: `\"mm\"` (millimeter), `\"um\"`\n(micrometer) or `\"nm\"` (nanometer).\n",
    "type": "string",
    "enum": [
      "mm",
      "um",
      "nm"
    ]
  },
  "PlasmaAvail": {
    "name": "PlasmaAvail",
    "display_name": "Plasma Avail",
    "description": "Boolean that specifies if plasma measurements are available.\n",
    "type": "boolean"
  },
  "PlasmaFreeFraction": {
    "name": "PlasmaFreeFraction",
    "display_name": "Plasma Free Fraction",
    "description": "Measured free fraction in plasma, meaning the concentration of free compound\nin plasma divided by total concentration of compound in plasma\n(Units: 0-100%).\n",
    "type": "number",
    "minimum": 0,
    "maximum": 100
  },
  "PlasmaFreeFractionMethod": {
    "name": "PlasmaFreeFractionMethod",
    "display_name": "Plasma Free Fraction Method",
    "description": "Method used to estimate free fraction.\n",
    "type": "string"
  },
  "POSChannelCount": {
    "name": "POSChannelCount",
    "display_name": "Position Channel Count",
    "description": "Number of position channels.\n",
    "type": "integer",
    "minimum": 0
  },
  "PostLabelingDelay": {
    "name": "PostLabelingDelay",
    "display_name": "Post Labeling Delay",
    "description": "This is the postlabeling delay (PLD) time, in seconds, after the end of the\nlabeling (for `\"CASL\"` or `\"PCASL\"`) or middle of the labeling pulse\n(for `\"PASL\"`) until the middle of the excitation pulse applied to the\nimaging slab (for 3D acquisition) or first slice (for 2D acquisition).\nCan be a number (for a single-PLD time series) or an array of numbers\n(for multi-PLD and Look-Locker).\nIn the latter case, the array of numbers contains the PLD of each volume,\nnamely each `control` and `label`, in the acquisition order.\nAny image within the time-series without a PLD, for example an `m0scan`,\nis indicated by a zero.\nBased on DICOM Tags 0018, 9079 `Inversion Times` and 0018, 0082\n`InversionTime`.\n",
    "anyOf": [
      {
        "type": "number",
        "exclusiveMinimum": 0,
        "unit": "s"
      },
      {
        "type": "array",
        "items": {
          "type": "number",
          "exclusiveMinimum": 0,
          "unit": "s"
        }
      }
    ]
  },
  "PowerLineFrequency": {
    "name": "PowerLineFrequency",
    "display_name": "Power Line Frequency",
    "description": "Frequency (in Hz) of the power grid at the geographical location of the\ninstrument (for example, `50` or `60`).\n",
    "anyOf": [
      {
        "type": "number",
        "exclusiveMinimum": 0,
        "unit": "Hz"
      },
      {
        "type": "string",
        "enum": [
          "n/a"
        ]
      }
    ]
  },
  "PromptRate": {
    "name": "PromptRate",
    "display_name": "Prompt Rate",
    "description": "Prompt rate for each frame (same units as `Units`, for example, `\"Bq/mL\"`).\n",
    "type": "array",
    "items": {
      "type": "number"
    }
  },
  "PulseSequenceDetails": {
    "name": "PulseSequenceDetails",
    "display_name": "Pulse Sequence Details",
    "description": "Information beyond pulse sequence type that identifies the specific pulse\nsequence used (for example,\n`\"Standard Siemens Sequence distributed with the VB17 software\"`,\n`\"Siemens WIP ### version #.##,\"` or\n`\"Sequence written by X using a version compiled on MM/DD/YYYY\"`).\n",
    "type": "string"
  },
  "PulseSequenceType": {
    "name": "PulseSequenceType",
    "display_name": "Pulse Sequence Type",
    "description": "A general description of the pulse sequence used for the scan\n(for example, `\"MPRAGE\"`, `\"Gradient Echo EPI\"`, `\"Spin Echo EPI\"`,\n`\"Multiband gradient echo EPI\"`).\n",
    "type": "string"
  },
  "Purity": {
    "name": "Purity",
    "display_name": "Purity",
    "description": "Purity of the radiolabeled compound (between 0 and 100%).\n",
    "type": "number",
    "minimum": 0,
    "maximum": 100
  },
  "RandomRate": {
    "name": "RandomRate",
    "display_name": "Random Rate",
    "description": "Random rate for each frame (same units as `\"Units\"`, for example, `\"Bq/mL\"`).\n",
    "type": "array",
    "items": {
      "type": "number"
    }
  },
  "RawSources": {
    "name": "RawSources",
    "display_name": "Raw Sources",
    "description": "A list of paths relative to dataset root pointing to the BIDS-Raw file(s)\nthat were used in the creation of this derivative.\nThis field is DEPRECATED, and this metadata SHOULD be recorded in the\n`Sources` field using [BIDS URIs](SPEC_ROOT/common-principles.md#bids-uri)\nto distinguish sources from different datasets.\n",
    "type": "array",
    "items": {
      "type": "string",
      "format": "dataset_relative"
    }
  },
  "ReceiveCoilActiveElements": {
    "name": "ReceiveCoilActiveElements",
    "display_name": "Receive Coil Active Elements",
    "description": "Information describing the active/selected elements of the receiver coil.\nThis does not correspond to a tag in the DICOM ontology.\nThe vendor-defined terminology for active coil elements can go in this field.\n",
    "type": "string"
  },
  "ReceiveCoilName": {
    "name": "ReceiveCoilName",
    "display_name": "Receive Coil Name",
    "description": "Information describing the receiver coil.\nCorresponds to DICOM Tag 0018, 1250 `Receive Coil Name`,\nalthough not all vendors populate that DICOM Tag,\nin which case this field can be derived from an appropriate\nprivate DICOM field.\n",
    "type": "string"
  },
  "ReconFilterSize": {
    "name": "ReconFilterSize",
    "display_name": "Recon Filter Size",
    "description": "Kernel size of post-recon filter (FWHM) in default units `\"mm\"`.\n",
    "anyOf": [
      {
        "type": "number",
        "unit": "mm"
      },
      {
        "type": "array",
        "items": {
          "type": "number",
          "unit": "mm"
        }
      }
    ]
  },
  "ReconFilterType": {
    "name": "ReconFilterType",
    "display_name": "Recon Filter Type",
    "description": "Type of post-recon smoothing (for example, `[\"Shepp\"]`).\n",
    "anyOf": [
      {
        "type": "string"
      },
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    ]
  },
  "ReconMethodImplementationVersion": {
    "name": "ReconMethodImplementationVersion",
    "display_name": "Recon Method Implementation Version",
    "description": "Identification for the software used, such as name and version.\n",
    "type": "string"
  },
  "ReconMethodName": {
    "name": "ReconMethodName",
    "display_name": "Recon Method Name",
    "description": "Reconstruction method or algorithm (for example, `\"3d-op-osem\"`).\n",
    "type": "string"
  },
  "ReconMethodParameterLabels": {
    "name": "ReconMethodParameterLabels",
    "display_name": "Recon Method Parameter Labels",
    "description": "Names of reconstruction parameters (for example, `[\"subsets\", \"iterations\"]`).\n",
    "type": "array",
    "items": {
      "type": "string"
    }
  },
  "ReconMethodParameterUnits": {
    "name": "ReconMethodParameterUnits",
    "display_name": "Recon Method Parameter Units",
    "description": "Unit of reconstruction parameters (for example, `[\"none\", \"none\"]`).\n",
    "type": "array",
    "items": {
      "type": "string",
      "format": "unit"
    }
  },
  "ReconMethodParameterValues": {
    "name": "ReconMethodParameterValues",
    "display_name": "Recon Method Parameter Values",
    "description": "Values of reconstruction parameters (for example, `[21, 3]`).\n",
    "type": "array",
    "items": {
      "type": "number"
    }
  },
  "RecordingDuration": {
    "name": "RecordingDuration",
    "display_name": "Recording Duration",
    "description": "Length of the recording in seconds (for example, `3600`).\n",
    "type": "number",
    "unit": "s"
  },
  "RecordingType": {
    "name": "RecordingType",
    "display_name": "Recording Type",
    "description": "Defines whether the recording is `\"continuous\"`, `\"discontinuous\"`, or\n`\"epoched\"`, where `\"epoched\"` is limited to time windows about events of\ninterest (for example, stimulus presentations or subject responses).\n",
    "type": "string",
    "enum": [
      {
        "$ref": "objects.enums.continuous.value"
      },
      {
        "$ref": "objects.enums.epoched.value"
      },
      {
        "$ref": "objects.enums.discontinuous.value"
      }
    ]
  },
  "ReferencesAndLinks": {
    "name": "ReferencesAndLinks",
    "display_name": "References And Links",
    "description": "List of references to publications that contain information on the dataset.\nA reference may be textual or a\n[URI](SPEC_ROOT/common-principles.md#uniform-resource-indicator).\n",
    "items": {
      "type": "string"
    },
    "type": "array"
  },
  "RepetitionTime": {
    "name": "RepetitionTime",
    "display_name": "Repetition Time",
    "description": "The time in seconds between the beginning of an acquisition of one volume\nand the beginning of acquisition of the volume following it (TR).\nWhen used in the context of functional acquisitions this parameter best\ncorresponds to\n[DICOM Tag 0020, 0110](http://dicomlookup.com/lookup.asp?sw=Tnumber&q=(0020,0110)):\nthe \"time delta between images in a\ndynamic of functional set of images\" but may also be found in\n[DICOM Tag 0018, 0080](http://dicomlookup.com/lookup.asp?sw=Tnumber&q=(0018,0080)):\n\"the period of time in msec between the beginning\nof a pulse sequence and the beginning of the succeeding\n(essentially identical) pulse sequence\".\nThis definition includes time between scans (when no data has been acquired)\nin case of sparse acquisition schemes.\nThis value MUST be consistent with the 'pixdim[4]' field (after accounting\nfor units stored in 'xyzt_units' field) in the NIfTI header.\nThis field is mutually exclusive with VolumeTiming.\n",
    "type": "number",
    "exclusiveMinimum": 0,
    "unit": "s"
  },
  "RepetitionTimeExcitation": {
    "name": "RepetitionTimeExcitation",
    "display_name": "Repetition Time Excitation",
    "description": "The interval, in seconds, between two successive excitations.\n[DICOM Tag 0018, 0080](http://dicomlookup.com/lookup.asp?sw=Tnumber&q=(0018,0080))\nbest refers to this parameter.\nThis field may be used together with the `\"RepetitionTimePreparation\"` for\ncertain use cases, such as\n[MP2RAGE](https://doi.org/10.1016/j.neuroimage.2009.10.002).\nUse `RepetitionTimeExcitation` (in combination with\n`\"RepetitionTimePreparation\"` if needed) for anatomy imaging data rather than\n`\"RepetitionTime\"` as it is already defined as the amount of time that it takes\nto acquire a single volume in the\n[task imaging data](SPEC_ROOT/modality-specific-files/magnetic-resonance-\\\nimaging-data.md#task-including-resting-state-imaging-data)\nsection.\n",
    "type": "number",
    "minimum": 0,
    "unit": "s"
  },
  "RepetitionTimePreparation": {
    "name": "RepetitionTimePreparation",
    "display_name": "Repetition Time Preparation",
    "description": "The interval, in seconds, that it takes a preparation pulse block to\nre-appear at the beginning of the succeeding (essentially identical) pulse\nsequence block.\nThe data type number may apply to files from any MRI modality concerned with\na single value for this field.\nThe data type array provides a value for each volume in a 4D dataset and\nshould only be used when the volume timing is critical for interpretation of\nthe data, such as in\n[ASL](SPEC_ROOT/modality-specific-files/magnetic-resonance-imaging-data.md\\\n#arterial-spin-labeling-perfusion-data).\n",
    "anyOf": [
      {
        "type": "number",
        "minimum": 0,
        "unit": "s"
      },
      {
        "type": "array",
        "items": {
          "type": "number",
          "minimum": 0,
          "unit": "s"
        }
      }
    ]
  },
  "Resolution": {
    "name": "Resolution",
    "display_name": "Resolution",
    "description": "Specifies the interpretation of the resolution keyword.\nIf an object is used, then the keys should be values for the `res` entity\nand values should be descriptions of those `res` values.\n",
    "anyOf": [
      {
        "type": "string"
      },
      {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      }
    ]
  },
  "RotationOrder": {
    "name": "RotationOrder",
    "display_name": "RotationOrder",
    "description": "Specify the sequence in which the elemental 3D extrinsic rotations are applied around the three distinct axes.\n",
    "type": "string",
    "enum": [
      "XYZ",
      "XZY",
      "YXZ",
      "YZX",
      "ZXY",
      "ZYX",
      "n/a"
    ]
  },
  "RotationRule": {
    "name": "RotationRule",
    "display_name": "Rotation Rule",
    "description": "In case orientation channels are present, indicate whether rotations are applied\nclockwise around an axis when seen from the positive direction (left-hand rule) or\ncounter-clockwise (right-hand rule). Must be one of: \"left-hand\", \"right-hand\".\n",
    "type": "string",
    "enum": [
      {
        "$ref": "objects.enums.left_hand.value"
      },
      {
        "$ref": "objects.enums.right_hand.value"
      },
      "n/a"
    ]
  },
  "SEEGChannelCount": {
    "name": "SEEGChannelCount",
    "display_name": "SEEG Channel Count",
    "description": "Number of SEEG channels.\n",
    "type": "integer",
    "minimum": 0
  },
  "SampleEmbedding": {
    "name": "SampleEmbedding",
    "display_name": "Sample Embedding",
    "description": "Description of the tissue sample embedding (for example: `\"Epoxy resin\"`).\n",
    "type": "string"
  },
  "SampleEnvironment": {
    "name": "SampleEnvironment",
    "display_name": "Sample Environment",
    "description": "Environment in which the sample was imaged. MUST be one of: `\"in vivo\"`, `\"ex vivo\"`\nor `\"in vitro\"`.\n",
    "type": "string",
    "enum": [
      {
        "$ref": "objects.enums.in_vivo.value"
      },
      {
        "$ref": "objects.enums.ex_vivo.value"
      },
      {
        "$ref": "objects.enums.in_vitro.value"
      }
    ]
  },
  "SampleExtractionInstitution": {
    "name": "SampleExtractionInstitution",
    "display_name": "Sample Extraction Institution",
    "description": "The name of the institution in charge of the extraction of the sample,\nif different from the institution in charge of the equipment that produced the image.\n",
    "type": "string"
  },
  "SampleExtractionProtocol": {
    "name": "SampleExtractionProtocol",
    "display_name": "Sample Extraction Protocol",
    "description": "Description of the sample extraction protocol or\n[URI](SPEC_ROOT/common-principles.md#uniform-resource-indicator)\n(for example from [protocols.io](https://www.protocols.io/)).\n",
    "type": "string"
  },
  "SampleFixation": {
    "name": "SampleFixation",
    "display_name": "Sample Fixation",
    "description": "Description of the tissue sample fixation\n(for example: `\"4% paraformaldehyde, 2% glutaraldehyde\"`).\n",
    "type": "string"
  },
  "SampleOrigin": {
    "name": "SampleOrigin",
    "display_name": "Sample Origin",
    "description": "Describes from which tissue the genetic information was extracted.\n",
    "type": "string",
    "enum": [
      {
        "$ref": "objects.enums.blood.value"
      },
      {
        "$ref": "objects.enums.saliva.value"
      },
      {
        "$ref": "objects.enums.brain.value"
      },
      {
        "$ref": "objects.enums.csf.value"
      },
      {
        "$ref": "objects.enums.breast_milk.value"
      },
      {
        "$ref": "objects.enums.bile.value"
      },
      {
        "$ref": "objects.enums.amniotic_fluid.value"
      },
      {
        "$ref": "objects.enums.other_biospecimen.value"
      }
    ]
  },
  "SamplePrimaryAntibody": {
    "name": "SamplePrimaryAntibody",
    "display_name": "Sample Primary Antibody",
    "description": "Description(s) of the primary antibody used for immunostaining.\nEither an [RRID](https://scicrunch.org/resources) or the name, supplier and catalog\nnumber of a commercial antibody.\nFor non-commercial antibodies either an [RRID](https://scicrunch.org/resources) or the\nhost-animal and immunogen used (for examples: `\"RRID:AB_2122563\"` or\n`\"Rabbit anti-Human HTR5A Polyclonal Antibody, Invitrogen, Catalog # PA1-2453\"`).\nMAY be an array of strings if different antibodies are used in each channel of the file.\n",
    "anyOf": [
      {
        "type": "string"
      },
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    ]
  },
  "SampleSecondaryAntibody": {
    "name": "SampleSecondaryAntibody",
    "display_name": "Sample Secondary Antibody",
    "description": "Description(s) of the secondary antibody used for immunostaining.\nEither an [RRID](https://scicrunch.org/resources) or the name, supplier and catalog\nnumber of a commercial antibody.\nFor non-commercial antibodies either an [RRID](https://scicrunch.org/resources) or the\nhost-animal and immunogen used (for examples: `\"RRID:AB_228322\"` or\n`\"Goat anti-Mouse IgM Secondary Antibody, Invitrogen, Catalog # 31172\"`).\nMAY be an array of strings if different antibodies are used in each channel of the file.\n",
    "anyOf": [
      {
        "type": "string"
      },
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    ]
  },
  "SampleStaining": {
    "name": "SampleStaining",
    "display_name": "Sample Staining",
    "description": "Description(s) of the tissue sample staining (for example: `\"Osmium\"`).\nMAY be an array of strings if different stains are used in each channel of the file\n(for example: `[\"LFB\", \"PLP\"]`).\n",
    "anyOf": [
      {
        "type": "string"
      },
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    ]
  },
  "SamplingFrequency": {
    "name": "SamplingFrequency",
    "display_name": "Sampling Frequency",
    "description": "Sampling frequency (in Hz) of all the data in the recording,\nregardless of their type (for example, `2400`).\n",
    "type": "number",
    "unit": "Hz"
  },
  "SamplingFrequencyEffective": {
    "name": "SamplingFrequencyEffective",
    "display_name": "Effective Sampling Frequency",
    "description": "Effective sampling frequency (in Hz) of all the data in the recording,\nregardless of their type (for example, `2400`) which can be determined if timestamps\nper sample are provided.\n",
    "type": "number",
    "unit": "Hz"
  },
  "SamplingFrequency__nirs": {
    "name": "SamplingFrequency",
    "display_name": "Sampling Frequency",
    "description": "Sampling frequency (in Hz) of all the data in the recording,\nregardless of their type (for example, `2400`).\n",
    "anyOf": [
      {
        "type": "number",
        "unit": "Hz"
      },
      {
        "type": "string",
        "enum": [
          "n/a"
        ]
      }
    ]
  },
  "ScaleFactor": {
    "name": "ScaleFactor",
    "display_name": "Scale Factor",
    "description": "Scale factor for each frame. This field MUST be defined if the imaging data (`.nii[.gz]`) are scaled.\nIf this field is not defined, then it is assumed that the scaling factor is 1. Defining this field\nwhen the scaling factor is 1 is RECOMMENDED, for the sake of clarity.\n",
    "type": "array",
    "items": {
      "type": "number"
    }
  },
  "ScanDate": {
    "name": "ScanDate",
    "display_name": "Scan Date",
    "description": "Date of scan in the format `\"YYYY-MM-DD[Z]\"`.\nThis field is DEPRECATED, and this metadata SHOULD be recorded in the `acq_time` column of the\ncorresponding [Scans file](SPEC_ROOT/modality-agnostic-files.md#scans-file).\n",
    "type": "string",
    "format": "date"
  },
  "ScanOptions": {
    "name": "ScanOptions",
    "display_name": "Scan Options",
    "description": "Parameters of ScanningSequence.\nCorresponds to DICOM Tag 0018, 0022 `Scan Options`.\n",
    "anyOf": [
      {
        "type": "string"
      },
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    ]
  },
  "ScanStart": {
    "name": "ScanStart",
    "display_name": "Scan Start",
    "description": "Time of start of scan with respect to `TimeZero` in the default unit seconds.\n",
    "type": "number",
    "unit": "s"
  },
  "ScanningSequence": {
    "name": "ScanningSequence",
    "display_name": "Scanning Sequence",
    "description": "Description of the type of data acquired.\nCorresponds to DICOM Tag 0018, 0020 `Scanning Sequence`.\n",
    "anyOf": [
      {
        "type": "string"
      },
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    ]
  },
  "ScatterFraction": {
    "name": "ScatterFraction",
    "display_name": "Scatter Fraction",
    "description": "Scatter fraction for each frame (Units: 0-100%).\n",
    "type": "array",
    "items": {
      "type": "number",
      "minimum": 0,
      "maximum": 100
    }
  },
  "ScreenDistance": {
    "name": "ScreenDistance",
    "display_name": "Screen Distance",
    "description": "Distance between the participant's eye and the screen. If no screen was used, use `n/a`.\n",
    "anyOf": [
      {
        "type": "number",
        "unit": "m"
      },
      {
        "type": "string",
        "enum": [
          "n/a"
        ]
      }
    ]
  },
  "ScreenRefreshRate": {
    "name": "ScreenRefreshRate",
    "display_name": "Screen Refresh Rate",
    "description": "Refresh rate of the screen (when used), in Hertz (equivalent to frames per second, \"FPS\").\n",
    "type": "number",
    "unit": "Hz"
  },
  "ScreenResolution": {
    "name": "ScreenResolution",
    "display_name": "Screen Resolution",
    "description": "Screen resolution in pixel\n(for example `[1920, 1200]` for a screen of 1920-width by 1080-height pixels),\nif no screen use `n/a`.\n",
    "anyOf": [
      {
        "type": "array",
        "items": {
          "type": "integer",
          "minItems": 2,
          "maxItems": 2
        }
      },
      {
        "type": "string",
        "enum": [
          "n/a"
        ]
      }
    ]
  },
  "ScreenSize": {
    "name": "ScreenSize",
    "display_name": "Screen Size",
    "description": "Screen size in m, excluding potential screen borders\n(for example `[0.472, 0.295]` for a screen of 47.2-width by 29.5-height cm),\nif no screen use `n/a`.\n",
    "anyOf": [
      {
        "type": "array",
        "items": {
          "type": "number",
          "unit": "m",
          "minItems": 2,
          "maxItems": 2
        }
      },
      {
        "type": "string",
        "enum": [
          "n/a"
        ]
      }
    ]
  },
  "SequenceName": {
    "name": "SequenceName",
    "display_name": "Sequence Name",
    "description": "Manufacturer's designation of the sequence name.\nCorresponds to DICOM Tag 0018, 0024 `Sequence Name`.\n",
    "type": "string"
  },
  "SequenceVariant": {
    "name": "SequenceVariant",
    "display_name": "Sequence Variant",
    "description": "Variant of the ScanningSequence.\nCorresponds to DICOM Tag 0018, 0021 `Sequence Variant`.\n",
    "anyOf": [
      {
        "type": "string"
      },
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    ]
  },
  "ShortChannelCount": {
    "name": "ShortChannelCount",
    "display_name": "Short Channel Count",
    "description": "The number of short channels. 0 indicates no short channels.\n",
    "type": "integer",
    "minimum": 0
  },
  "SinglesRate": {
    "name": "SinglesRate",
    "display_name": "Singles Rate",
    "description": "Singles rate for each frame (same units as `Units`, for example, `\"Bq/mL\"`).\n",
    "type": "array",
    "items": {
      "type": "number"
    }
  },
  "SkullStripped": {
    "name": "SkullStripped",
    "display_name": "Skull Stripped",
    "description": "Whether the volume was skull stripped (non-brain voxels set to zero) or not.\n",
    "type": "boolean"
  },
  "SliceEncodingDirection": {
    "name": "SliceEncodingDirection",
    "display_name": "Slice Encoding Direction",
    "description": "The axis of the NIfTI data along which slices were acquired,\nand the direction in which `\"SliceTiming\"` is defined with respect to.\n`i`, `j`, `k` identifiers correspond to the first, second and third axis of\nthe data in the NIfTI file.\nA `-` sign indicates that the contents of `\"SliceTiming\"` are defined in\nreverse order - that is, the first entry corresponds to the slice with the\nlargest index, and the final entry corresponds to slice index zero.\nWhen present, the axis defined by `\"SliceEncodingDirection\"` needs to be\nconsistent with the `slice_dim` field in the NIfTI header.\nWhen absent, the entries in `\"SliceTiming\"` must be in the order of increasing\nslice index as defined by the NIfTI header.\n",
    "type": "string",
    "enum": [
      {
        "$ref": "objects.enums.i.value"
      },
      {
        "$ref": "objects.enums.iMinus.value"
      },
      {
        "$ref": "objects.enums.j.value"
      },
      {
        "$ref": "objects.enums.jMinus.value"
      },
      {
        "$ref": "objects.enums.k.value"
      },
      {
        "$ref": "objects.enums.kMinus.value"
      }
    ]
  },
  "SliceThickness": {
    "name": "SliceThickness",
    "display_name": "Slice Thickness",
    "description": "Slice thickness of the tissue sample in the unit micrometers (`\"um\"`) (for example: `5`).\n",
    "type": "number",
    "unit": "um",
    "exclusiveMinimum": 0
  },
  "SliceTiming": {
    "name": "SliceTiming",
    "display_name": "Slice Timing",
    "description": "The time at which each slice was acquired within each volume (frame) of the\nacquisition.\nSlice timing is not slice order -- rather, it is a list of times containing\nthe time (in seconds) of each slice acquisition in relation to the beginning\nof volume acquisition.\nThe list goes through the slices along the slice axis in the slice encoding\ndimension (see below).\nNote that to ensure the proper interpretation of the `\"SliceTiming\"` field,\nit is important to check if the OPTIONAL `SliceEncodingDirection` exists.\nIn particular, if `\"SliceEncodingDirection\"` is negative,\nthe entries in `\"SliceTiming\"` are defined in reverse order with respect to the\nslice axis, such that the final entry in the `\"SliceTiming\"` list is the time\nof acquisition of slice 0. Without this parameter slice time correction will\nnot be possible.\n",
    "type": "array",
    "items": {
      "type": "number",
      "minimum": 0,
      "unit": "s"
    }
  },
  "SoftwareFilters": {
    "name": "SoftwareFilters",
    "display_name": "Software Filters",
    "description": "[Object](https://www.json.org/json-en.html)\nof temporal software filters applied, or `\"n/a\"` if the data is\nnot available.\nEach key-value pair in the JSON object is a name of the filter and an object\nin which its parameters are defined as key-value pairs\n(for example, `{\"Anti-aliasing filter\":\n{\"half-amplitude cutoff (Hz)\": 500, \"Roll-off\": \"6dB/Octave\"}}`).\n",
    "anyOf": [
      {
        "type": "object",
        "additionalProperties": {
          "type": "object"
        }
      },
      {
        "type": "string",
        "enum": [
          "n/a"
        ]
      }
    ]
  },
  "SoftwareName": {
    "name": "SoftwareName",
    "display_name": "Software Name",
    "description": "Name of the software that was used to present the stimuli.\n",
    "type": "string"
  },
  "SoftwareRRID": {
    "name": "SoftwareRRID",
    "display_name": "SoftwareRRID",
    "description": "[Research Resource Identifier](https://scicrunch.org/resources) of the\nsoftware that was used to present the stimuli.\nExamples: The RRID for Psychtoolbox is 'SCR_002881',\nand that of PsychoPy is 'SCR_006571'.\n",
    "type": "string",
    "format": "rrid"
  },
  "SoftwareVersion": {
    "name": "SoftwareVersion",
    "display_name": "Software Version",
    "description": "Version of the software that was used to present the stimuli.\n",
    "type": "string"
  },
  "SoftwareVersions": {
    "name": "SoftwareVersions",
    "display_name": "Software Versions",
    "description": "Manufacturer's designation of software version of the equipment that produced\nthe measurements.\n",
    "type": "string"
  },
  "SourceDatasets": {
    "name": "SourceDatasets",
    "display_name": "Source Datasets",
    "description": "Used to specify the locations and relevant attributes of all source datasets.\nValid keys in each object include `\"URL\"`, `\"DOI\"` (see\n[URI](SPEC_ROOT/common-principles.md#uniform-resource-indicator)), and\n`\"Version\"` with\n[string](https://www.w3schools.com/js/js_json_datatypes.asp)\nvalues.\n",
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "URL": {
          "type": "string",
          "format": "uri"
        },
        "DOI": {
          "type": "string"
        },
        "Version": {
          "type": "string"
        }
      }
    }
  },
  "Sources": {
    "name": "Sources",
    "display_name": "Sources",
    "description": "A list of files with the paths specified using\n[BIDS URIs](SPEC_ROOT/common-principles.md#bids-uri);\nthese files were directly used in the creation of this derivative data file.\nFor example, if a derivative A is used in the creation of another\nderivative B, which is in turn used to generate C in a chain of A->B->C,\nC should only list B in `\"Sources\"`, and B should only list A in `\"Sources\"`.\nHowever, in case both X and Y are directly used in the creation of Z,\nthen Z should list X and Y in `\"Sources\"`,\nregardless of whether X was used to generate Y.\nUsing paths specified relative to the dataset root is\n[DEPRECATED](SPEC_ROOT/common-principles.md#definitions).\n",
    "type": "array",
    "items": {
      "type": "string",
      "format": "dataset_relative"
    }
  },
  "SourceType": {
    "name": "SourceType",
    "display_name": "Source Type",
    "description": "Type of source. Preferably a specific model/part number is supplied.\nThis is a freeform description, but the following keywords are suggested:\n`\"LED\"`, `\"LASER\"`, `\"VCSEL\"`. If individual channels have different SourceType,\nthen the field here should be specified as \"mixed\"\nand this column should be included in optodes.tsv.\n",
    "type": "string"
  },
  "SpatialAxes": {
    "name": "SpatialAxes",
    "display_name": "Spatial axes",
    "description": "Refers to the coordinate system in which the motion data are to be interpreted,\nif the recorded data can be mapped to a fixed reference frame. A sequence of\ncharacters F/B (forward-backward), L/R (left-right), and U/D (up-down). The\nposition of a character in the sequence determines which of the X,Y,Z axes it\nmaps to. For example, \"FRD\" for X-forward, Y-right, Z-down. For 1D or 2D cases,\nonly specify the used axes and use the character \"_\" for unused axes\n(\"F_R\" when the Y axis is not used, for instance).\n",
    "type": "string"
  },
  "SpatialReference": {
    "name": "SpatialReference",
    "display_name": "Spatial Reference",
    "description": "For images with a single reference, the value MUST be a single string.\nFor images with multiple references, such as surface and volume references,\na JSON object MUST be used.\n",
    "anyOf": [
      {
        "type": "string",
        "enum": [
          {
            "$ref": "objects.enums.orig.value"
          }
        ]
      },
      {
        "type": "string",
        "format": "uri"
      },
      {
        "type": "string",
        "format": "dataset_relative"
      },
      {
        "type": "object",
        "additionalProperties": {
          "anyOf": [
            {
              "type": "string",
              "enum": [
                {
                  "$ref": "objects.enums.orig.value"
                }
              ]
            },
            {
              "type": "string",
              "format": "uri"
            },
            {
              "type": "string",
              "format": "dataset_relative"
            }
          ]
        }
      }
    ]
  },
  "SpecificRadioactivity": {
    "name": "SpecificRadioactivity",
    "display_name": "Specific Radioactivity",
    "description": "Specific activity of compound injected.\n**Note this is not required for an FDG acquisition, since it is not available,\nand SHOULD be set to `\"n/a\"`**.\n",
    "anyOf": [
      {
        "type": "number"
      },
      {
        "type": "string",
        "enum": [
          "n/a"
        ]
      }
    ]
  },
  "SpecificRadioactivityMeasTime": {
    "name": "SpecificRadioactivityMeasTime",
    "display_name": "Specific Radioactivity Measurement Time",
    "description": "Time to which specific radioactivity measurement above applies in the default\nunit `\"hh:mm:ss\"`.\n",
    "type": "string",
    "format": "time"
  },
  "SpecificRadioactivityUnits": {
    "name": "SpecificRadioactivityUnits",
    "display_name": "Specific Radioactivity Units",
    "description": "Unit format of specified specific radioactivity (for example, `\"Bq/g\"`).\n**Note this is not required for an FDG acquisition, since it is not available,\nand SHOULD be set to `\"n/a\"`**.\n",
    "anyOf": [
      {
        "type": "string",
        "format": "unit"
      },
      {
        "type": "string",
        "enum": [
          "n/a"
        ]
      }
    ]
  },
  "SpoilingGradientDuration": {
    "name": "SpoilingGradientDuration",
    "display_name": "Spoiling Gradient Duration",
    "description": "The duration of the spoiler gradient lobe in seconds.\nThe duration of a trapezoidal lobe is defined as the summation of ramp-up\nand plateau times.\n",
    "type": "number",
    "unit": "s"
  },
  "SpoilingGradientMoment": {
    "name": "SpoilingGradientMoment",
    "display_name": "Spoiling Gradient Moment",
    "description": "Zeroth moment of the spoiler gradient lobe in\nmillitesla times second per meter (mT.s/m).\n",
    "type": "number",
    "unit": "mT.s/m"
  },
  "SpoilingRFPhaseIncrement": {
    "name": "SpoilingRFPhaseIncrement",
    "display_name": "Spoiling RF Phase Increment",
    "description": "The amount of incrementation described in degrees,\nwhich is applied to the phase of the excitation pulse at each TR period for\nachieving RF spoiling.\n",
    "type": "number",
    "unit": "degree"
  },
  "SpoilingState": {
    "name": "SpoilingState",
    "display_name": "Spoiling State",
    "description": "Boolean stating whether the pulse sequence uses any type of spoiling\nstrategy to suppress residual transverse magnetization.\n",
    "type": "boolean"
  },
  "SpoilingType": {
    "name": "SpoilingType",
    "display_name": "Spoiling Type",
    "description": "Specifies which spoiling method(s) are used by a spoiled sequence.\n",
    "type": "string",
    "enum": [
      {
        "$ref": "objects.enums.RF.value"
      },
      {
        "$ref": "objects.enums.GRADIENT.value"
      },
      {
        "$ref": "objects.enums.COMBINED.value"
      }
    ]
  },
  "StartTime": {
    "name": "StartTime",
    "display_name": "Start Time",
    "description": "Start time in seconds in relation to the start of acquisition of the first\ndata sample in the corresponding (neural) dataset (negative values are allowed).\nThis data MAY be specified with sub-second precision using the syntax `s[.000000]`,\nwhere `s` reflects whole seconds, and `.000000` reflects OPTIONAL fractional seconds.\n",
    "type": "number",
    "unit": "s"
  },
  "StationName": {
    "name": "StationName",
    "display_name": "Station Name",
    "description": "Institution defined name of the machine that produced the measurements.\n",
    "type": "string"
  },
  "StimulusPresentation": {
    "name": "StimulusPresentation",
    "display_name": "Stimulus Presentation",
    "description": "Object containing key-value pairs related to the software used to present\nthe stimuli during the experiment.\n",
    "type": "object",
    "recommended_fields": [
      "OperatingSystem",
      "ScreenDistance",
      "ScreenRefreshRate",
      "ScreenResolution",
      "ScreenSize",
      "SoftwareName",
      "SoftwareRRID",
      "SoftwareVersion",
      "Code",
      "HeadStabilization"
    ],
    "properties": {
      "OperatingSystem": {
        "$ref": "objects.metadata.OperatingSystem"
      },
      "ScreenDistance": {
        "$ref": "objects.metadata.ScreenDistance"
      },
      "ScreenRefreshRate": {
        "$ref": "objects.metadata.ScreenRefreshRate"
      },
      "ScreenResolution": {
        "$ref": "objects.metadata.ScreenResolution"
      },
      "ScreenSize": {
        "$ref": "objects.metadata.ScreenSize"
      },
      "SoftwareName": {
        "$ref": "objects.metadata.SoftwareName"
      },
      "SoftwareRRID": {
        "$ref": "objects.metadata.SoftwareRRID"
      },
      "SoftwareVersion": {
        "$ref": "objects.metadata.SoftwareVersion"
      },
      "Code": {
        "$ref": "objects.metadata.Code"
      }
    }
  },
  "SubjectArtefactDescription": {
    "name": "SubjectArtefactDescription",
    "display_name": "Subject Artifact Description",
    "description": "Freeform description of the observed subject artifact and its possible cause\n(for example, `\"Vagus Nerve Stimulator\"`, `\"non-removable implant\"`).\nIf this field is set to `\"n/a\"`, it will be interpreted as absence of major\nsource of artifacts except cardiac and blinks.\n",
    "type": "string"
  },
  "TaskDescription": {
    "name": "TaskDescription",
    "display_name": "Task Description",
    "description": "Longer description of the task.\n",
    "type": "string"
  },
  "TaskName": {
    "name": "TaskName",
    "display_name": "Task Name",
    "description": "Name of the task.\nNo two tasks should have the same name.\nThe task label included in the filename is derived from this `\"TaskName\"` field\nby removing all non-alphanumeric characters (that is, all except those matching `[0-9a-zA-Z]`).\nFor example `\"TaskName\"` `\"faces n-back\"` or `\"head nodding\"` will correspond to task labels\n`facesnback` and `headnodding`, respectively.\n",
    "type": "string"
  },
  "TermURL": {
    "name": "TermURL",
    "display_name": "TermURL",
    "description": "URL pointing to a formal definition of this type of data in an ontology available on the web.\nFor example: https://www.ncbi.nlm.nih.gov/mesh/68008297 for \"male\".\n",
    "type": "string",
    "format": "uri"
  },
  "TimeZero": {
    "name": "TimeZero",
    "display_name": "Time Zero",
    "description": "Time zero to which all scan and/or blood measurements have been adjusted to,\nin the unit \"hh:mm:ss\".\nThis should be equal to `\"InjectionStart\"` or `\"ScanStart\"`.\n",
    "type": "string",
    "format": "time"
  },
  "TissueDeformationScaling": {
    "name": "TissueDeformationScaling",
    "display_name": "Tissue Deformation Scaling",
    "description": "Estimated deformation of the tissue, given as a percentage of the original\ntissue size (for examples: for a shrinkage of 3%, the value is `97`;\nand for an expansion of 100%, the value is `200`).\n",
    "type": "number",
    "exclusiveMinimum": 0
  },
  "TissueOrigin": {
    "name": "TissueOrigin",
    "display_name": "Tissue Origin",
    "description": "Describes the type of tissue analyzed for `\"SampleOrigin\"` `brain`.\n",
    "type": "string",
    "enum": [
      {
        "$ref": "objects.enums.gray_matter.value"
      },
      {
        "$ref": "objects.enums.white_matter.value"
      },
      {
        "$ref": "objects.enums.csf.value"
      },
      {
        "$ref": "objects.enums.meninges.value"
      },
      {
        "$ref": "objects.enums.macrovascular.value"
      },
      {
        "$ref": "objects.enums.microvascular.value"
      }
    ]
  },
  "TotalAcquiredPairs": {
    "name": "TotalAcquiredPairs",
    "display_name": "Total Acquired Pairs",
    "description": "The total number of acquired `control`-`label` pairs.\nA single pair consists of a single `control` and a single `label` image.\n",
    "type": "number",
    "exclusiveMinimum": 0
  },
  "TotalReadoutTime": {
    "name": "TotalReadoutTime",
    "display_name": "Total Readout Time",
    "description": "This is actually the \"effective\" total readout time,\ndefined as the readout duration, specified in seconds,\nthat would have generated data with the given level of distortion.\nIt is NOT the actual, physical duration of the readout train.\nIf `\"EffectiveEchoSpacing\"` has been properly computed,\nit is just `EffectiveEchoSpacing * (ReconMatrixPE - 1)`.\n",
    "type": "number",
    "unit": "s"
  },
  "TracerMolecularWeight": {
    "name": "TracerMolecularWeight",
    "display_name": "Tracer Molecular Weight",
    "description": "Accurate molecular weight of the tracer used.\n",
    "type": "number"
  },
  "TracerMolecularWeightUnits": {
    "name": "TracerMolecularWeightUnits",
    "display_name": "Tracer Molecular Weight Units",
    "description": "Unit of the molecular weights measurement (for example, `\"g/mol\"`).\n",
    "type": "string",
    "format": "unit"
  },
  "TracerName": {
    "name": "TracerName",
    "display_name": "Tracer Name",
    "description": "Name of the tracer compound used (for example, `\"CIMBI-36\"`)\n",
    "type": "string"
  },
  "TracerRadLex": {
    "name": "TracerRadLex",
    "display_name": "Tracer Rad Lex",
    "description": "ID of the tracer compound from the RadLex Ontology.\n",
    "type": "string"
  },
  "TracerRadionuclide": {
    "name": "TracerRadionuclide",
    "display_name": "Tracer Radionuclide",
    "description": "Radioisotope labeling tracer (for example, `\"C11\"`).\n",
    "type": "string"
  },
  "TracerSNOMED": {
    "name": "TracerSNOMED",
    "display_name": "TracerSNOMED",
    "description": "ID of the tracer compound from the SNOMED Ontology\n(subclass of Radioactive isotope).\n",
    "type": "string"
  },
  "TubingLength": {
    "name": "TubingLength",
    "display_name": "Tubing Length",
    "description": "The length of the blood tubing, from the subject to the detector in meters.\n",
    "type": "number",
    "unit": "m"
  },
  "TriggerChannelCount": {
    "name": "TriggerChannelCount",
    "display_name": "Trigger Channel Count",
    "description": "Number of channels for digital (binary TTL) triggers or analog equivalents (TTL in volt).\nCorresponds to the `TRIG` channel type.\n",
    "type": "integer",
    "minimum": 0
  },
  "TrackedPointsCount": {
    "name": "TrackedPointsCount",
    "display_name": "Tracked Points Count",
    "description": "Number of different tracked points tracked in a motion tracking system.\n",
    "type": "number",
    "unit": "m"
  },
  "TrackingSystemName": {
    "name": "TrackingSystemName",
    "display_name": "Tracking System Name",
    "description": "A human-readable name of the tracking system to complement `\"tracksys\"` label\nof the corresponding *_motion.tsv filename.\n",
    "type": "string"
  },
  "TubingType": {
    "name": "TubingType",
    "display_name": "Tubing Type",
    "description": "Description of the type of tubing used, ideally including the material and\n(internal) diameter.\n",
    "type": "string"
  },
  "Type": {
    "name": "Type",
    "display_name": "Type",
    "description": "Short identifier of the mask.\nThe value `\"Brain\"` refers to a brain mask.\nThe value `\"Lesion\"` refers to a lesion mask.\nThe value `\"Face\"` refers to a face mask.\nThe value `\"ROI\"` refers to a region of interest mask.\n",
    "type": "string",
    "enum": [
      {
        "$ref": "objects.enums.Brain.value"
      },
      {
        "$ref": "objects.enums.Lesion.value"
      },
      {
        "$ref": "objects.enums.Face.value"
      },
      {
        "$ref": "objects.enums.ROI.value"
      }
    ]
  },
  "Units": {
    "name": "Units",
    "display_name": "Units",
    "description": "Measurement units for the associated file.\nSI units in CMIXF formatting are RECOMMENDED\n(see [Units](SPEC_ROOT/common-principles.md#units)).\n",
    "type": "string",
    "format": "unit"
  },
  "VascularCrushing": {
    "name": "VascularCrushing",
    "display_name": "Vascular Crushing",
    "description": "Boolean indicating if Vascular Crushing is used.\nCorresponds to DICOM Tag 0018, 9259 `ASL Crusher Flag`.\n",
    "type": "boolean"
  },
  "VascularCrushingVENC": {
    "name": "VascularCrushingVENC",
    "display_name": "Vascular Crushing VENC",
    "description": "The crusher gradient strength, in centimeters per second.\nSpecify either one number for the total time-series, or provide an array of\nnumbers, for example when using QUASAR, using the value zero to identify\nvolumes for which `VascularCrushing` was turned off.\nCorresponds to DICOM Tag 0018, 925A `ASL Crusher Flow Limit`.\n",
    "anyOf": [
      {
        "type": "number",
        "unit": "cm/s"
      },
      {
        "type": "array",
        "items": {
          "type": "number",
          "unit": "cm/s"
        }
      }
    ]
  },
  "VELChannelCount": {
    "name": "VELChannelCount",
    "display_name": "Velocity Channel Count",
    "description": "Number of linear velocity channels.\n",
    "type": "integer",
    "minimum": 0
  },
  "VisionCorrection": {
    "name": "VisionCorrection",
    "display_name": "Vision correction",
    "description": "Equipment used to correct participant vision during an experiment.\nExample: \"spectacles\", \"lenses\", \"none\".\n",
    "type": "string"
  },
  "VolumeTiming": {
    "name": "VolumeTiming",
    "display_name": "Volume Timing",
    "description": "The time at which each volume was acquired during the acquisition.\nIt is described using a list of times referring to the onset of each volume\nin the BOLD series.\nThe list must have the same length as the BOLD series,\nand the values must be non-negative and monotonically increasing.\nThis field is mutually exclusive with `\"RepetitionTime\"` and `\"DelayTime\"`.\nIf defined, this requires acquisition time (TA) be defined via either\n`\"SliceTiming\"` or `\"AcquisitionDuration\"` be defined.\n",
    "type": "array",
    "minItems": 1,
    "items": {
      "type": "number",
      "unit": "s"
    }
  },
  "WholeBloodAvail": {
    "name": "WholeBloodAvail",
    "display_name": "Whole Blood Avail",
    "description": "Boolean that specifies if whole blood measurements are available.\nIf `true`, the `whole_blood_radioactivity` column MUST be present in the\ncorresponding `*_blood.tsv` file.\n",
    "type": "boolean"
  },
  "WithdrawalRate": {
    "name": "WithdrawalRate",
    "display_name": "Withdrawal Rate",
    "description": "The rate at which the blood was withdrawn from the subject.\nThe unit of the specified withdrawal rate should be in `\"mL/s\"`.\n",
    "type": "number",
    "unit": "mL/s"
  },
  "iEEGCoordinateProcessingDescription": {
    "name": "iEEGCoordinateProcessingDescription",
    "display_name": "iEEG Coordinate Processing Description",
    "description": "Has any post-processing (such as projection) been done on the electrode\npositions (for example, `\"surface_projection\"`, `\"none\"`).\n",
    "type": "string"
  },
  "iEEGCoordinateProcessingReference": {
    "name": "iEEGCoordinateProcessingReference",
    "display_name": "iEEG Coordinate Processing Reference",
    "description": "A reference to a paper that defines in more detail the method used to\nlocalize the electrodes and to post-process the electrode positions.\n",
    "type": "string"
  },
  "iEEGCoordinateSystem": {
    "name": "iEEGCoordinateSystem",
    "display_name": "iEEG Coordinate System",
    "description": "Defines the coordinate system for the iEEG sensors.\nSee the\n[Coordinate Systems Appendix](SPEC_ROOT/appendices/coordinate-systems.md)\nfor a list of restricted keywords for coordinate systems.\nIf `\"Other\"`, provide definition of the coordinate system in\n`iEEGCoordinateSystemDescription`.\nIf positions correspond to pixel indices in a 2D image\n(of either a volume-rendering, surface-rendering, operative photo, or\noperative drawing), this MUST be `\"Pixels\"`.\nFor more information, see the section on\n[2D coordinate systems](SPEC_ROOT/modality-specific-files/intracranial\\\n-electroencephalography.md#allowed-2d-coordinate-systems).\n",
    "anyOf": [
      {
        "$ref": "objects.enums._iEEGCoordSys"
      },
      {
        "$ref": "objects.enums._StandardTemplateCoordSys"
      },
      {
        "$ref": "objects.enums._StandardTemplateDeprecatedCoordSys"
      }
    ]
  },
  "iEEGCoordinateSystemDescription": {
    "name": "iEEGCoordinateSystemDescription",
    "display_name": "iEEG Coordinate System Description",
    "description": "Free-form text description of the coordinate system.\nMay also include a link to a documentation page or paper describing the\nsystem in greater detail.\n",
    "type": "string"
  },
  "iEEGCoordinateUnits": {
    "name": "iEEGCoordinateUnits",
    "display_name": "iEEG Coordinate Units",
    "description": "Units of the `*_electrodes.tsv`.\nMUST be `\"pixels\"` if `iEEGCoordinateSystem` is `Pixels`.\n",
    "type": "string",
    "enum": [
      {
        "$ref": "objects.enums.pixels.value"
      },
      "m",
      "mm",
      "cm",
      "n/a"
    ]
  },
  "iEEGElectrodeGroups": {
    "name": "iEEGElectrodeGroups",
    "display_name": "iEEG Electrode Groups",
    "description": "Field to describe the way electrodes are grouped into strips, grids or depth\nprobes.\nFor example, `\"grid1: 10x8 grid on left temporal pole, strip2: 1x8 electrode\nstrip on xxx\"`.\n",
    "type": "string"
  },
  "iEEGGround": {
    "name": "iEEGGround",
    "display_name": "iEEG Ground",
    "description": "Description of the location of the ground electrode\n(`\"placed on right mastoid (M2)\"`).\n",
    "type": "string"
  },
  "iEEGPlacementScheme": {
    "name": "iEEGPlacementScheme",
    "display_name": "iEEG Placement Scheme",
    "description": "Freeform description of the placement of the iEEG electrodes.\nLeft/right/bilateral/depth/surface\n(for example, `\"left frontal grid and bilateral hippocampal depth\"` or\n`\"surface strip and STN depth\"` or\n`\"clinical indication bitemporal, bilateral temporal strips and left grid\"`).\n",
    "type": "string"
  },
  "iEEGReference": {
    "name": "iEEGReference",
    "display_name": "iEEG Reference",
    "description": "General description of the reference scheme used and (when applicable) of\nlocation of the reference electrode in the raw recordings\n(for example, `\"left mastoid\"`, `\"bipolar\"`,\n`\"T01\"` for electrode with name T01,\n`\"intracranial electrode on top of a grid, not included with data\"`,\n`\"upside down electrode\"`).\nIf different channels have a different reference,\nthis field should have a general description and the channel specific\nreference should be defined in the `channels.tsv` file.\n",
    "type": "string"
  }
}